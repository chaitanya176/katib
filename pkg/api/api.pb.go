// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	FeasibleSpace
	ParameterConfig
	Parameter
	MetricsLogSet
	Metrics
	MetricsLog
	SuggestionParameter
	EarlyStoppingParameter
	Tag
	MountConf
	Toleration
	StudyOverview
	Trial
	WorkerConfig
	Worker
	StudyConfig
	CreateStudyRequest
	CreateStudyReply
	StopStudyRequest
	StopStudyReply
	GetStudyRequest
	GetStudyReply
	GetStudyListRequest
	GetStudyListReply
	CreateTrialRequest
	CreateTrialReply
	GetTrialsRequest
	GetTrialsReply
	RunTrialRequest
	RunTrialReply
	StopWorkersRequest
	StopWorkersReply
	GetWorkersRequest
	GetWorkersReply
	GetSuggestionsRequest
	GetSuggestionsReply
	GetShouldStopWorkersRequest
	GetShouldStopWorkersReply
	GetMetricsRequest
	GetMetricsReply
	ModelInfo
	DataSetInfo
	SaveStudyRequest
	SaveStudyReply
	SaveModelRequest
	SaveModelReply
	GetSavedStudiesRequest
	GetSavedStudiesReply
	GetSavedModelsRequest
	GetSavedModelsReply
	GetSavedModelRequest
	GetSavedModelReply
	SetSuggestionParametersRequest
	SetSuggestionParametersReply
	GetSuggestionParametersRequest
	GetSuggestionParametersReply
	GetSuggestionParameterListRequest
	SuggestionParameterSet
	GetSuggestionParameterListReply
	StopSuggestionRequest
	StopSuggestionReply
	SetEarlyStoppingParametersRequest
	SetEarlyStoppingParametersReply
	GetEarlyStoppingParametersRequest
	GetEarlyStoppingParametersReply
	GetEarlyStoppingParameterListRequest
	EarlyStoppingParameterSet
	GetEarlyStoppingParameterListReply
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ParameterType int32

const (
	// Not used
	ParameterType_UNKNOWN_TYPE ParameterType = 0
	ParameterType_DOUBLE       ParameterType = 1
	ParameterType_INT          ParameterType = 2
	ParameterType_DISCRETE     ParameterType = 3
	ParameterType_CATEGORICAL  ParameterType = 4
)

var ParameterType_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "DOUBLE",
	2: "INT",
	3: "DISCRETE",
	4: "CATEGORICAL",
}
var ParameterType_value = map[string]int32{
	"UNKNOWN_TYPE": 0,
	"DOUBLE":       1,
	"INT":          2,
	"DISCRETE":     3,
	"CATEGORICAL":  4,
}

func (x ParameterType) String() string {
	return proto.EnumName(ParameterType_name, int32(x))
}
func (ParameterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OptimizationType int32

const (
	// Not used
	OptimizationType_UNKNOWN_OPTIMIZATION OptimizationType = 0
	OptimizationType_MINIMIZE             OptimizationType = 1
	OptimizationType_MAXIMIZE             OptimizationType = 2
)

var OptimizationType_name = map[int32]string{
	0: "UNKNOWN_OPTIMIZATION",
	1: "MINIMIZE",
	2: "MAXIMIZE",
}
var OptimizationType_value = map[string]int32{
	"UNKNOWN_OPTIMIZATION": 0,
	"MINIMIZE":             1,
	"MAXIMIZE":             2,
}

func (x OptimizationType) String() string {
	return proto.EnumName(OptimizationType_name, int32(x))
}
func (OptimizationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// This value is stored as TINYINT in MySQL.
type State int32

const (
	State_PENDING   State = 0
	State_RUNNING   State = 1
	State_COMPLETED State = 2
	State_KILLED    State = 3
	State_ERROR     State = 120
)

var State_name = map[int32]string{
	0:   "PENDING",
	1:   "RUNNING",
	2:   "COMPLETED",
	3:   "KILLED",
	120: "ERROR",
}
var State_value = map[string]int32{
	"PENDING":   0,
	"RUNNING":   1,
	"COMPLETED": 2,
	"KILLED":    3,
	"ERROR":     120,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type FeasibleSpace struct {
	Max  string   `protobuf:"bytes,1,opt,name=max" json:"max,omitempty"`
	Min  string   `protobuf:"bytes,2,opt,name=min" json:"min,omitempty"`
	List []string `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
	Step string   `protobuf:"bytes,4,opt,name=step" json:"step,omitempty"`
}

func (m *FeasibleSpace) Reset()                    { *m = FeasibleSpace{} }
func (m *FeasibleSpace) String() string            { return proto.CompactTextString(m) }
func (*FeasibleSpace) ProtoMessage()               {}
func (*FeasibleSpace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FeasibleSpace) GetMax() string {
	if m != nil {
		return m.Max
	}
	return ""
}

func (m *FeasibleSpace) GetMin() string {
	if m != nil {
		return m.Min
	}
	return ""
}

func (m *FeasibleSpace) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FeasibleSpace) GetStep() string {
	if m != nil {
		return m.Step
	}
	return ""
}

type ParameterConfig struct {
	Name          string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParameterType ParameterType `protobuf:"varint,2,opt,name=parameter_type,json=parameterType,enum=api.ParameterType" json:"parameter_type,omitempty"`
	// The following values defines a feasible parameter space.
	Feasible *FeasibleSpace `protobuf:"bytes,3,opt,name=feasible" json:"feasible,omitempty"`
}

func (m *ParameterConfig) Reset()                    { *m = ParameterConfig{} }
func (m *ParameterConfig) String() string            { return proto.CompactTextString(m) }
func (*ParameterConfig) ProtoMessage()               {}
func (*ParameterConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ParameterConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParameterConfig) GetParameterType() ParameterType {
	if m != nil {
		return m.ParameterType
	}
	return ParameterType_UNKNOWN_TYPE
}

func (m *ParameterConfig) GetFeasible() *FeasibleSpace {
	if m != nil {
		return m.Feasible
	}
	return nil
}

type Parameter struct {
	Name          string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParameterType ParameterType `protobuf:"varint,2,opt,name=parameter_type,json=parameterType,enum=api.ParameterType" json:"parameter_type,omitempty"`
	Value         string        `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetParameterType() ParameterType {
	if m != nil {
		return m.ParameterType
	}
	return ParameterType_UNKNOWN_TYPE
}

func (m *Parameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MetricsLogSet struct {
	WorkerId     string        `protobuf:"bytes,1,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	MetricsLogs  []*MetricsLog `protobuf:"bytes,2,rep,name=metrics_logs,json=metricsLogs" json:"metrics_logs,omitempty"`
	WorkerStatus State         `protobuf:"varint,3,opt,name=worker_status,json=workerStatus,enum=api.State" json:"worker_status,omitempty"`
}

func (m *MetricsLogSet) Reset()                    { *m = MetricsLogSet{} }
func (m *MetricsLogSet) String() string            { return proto.CompactTextString(m) }
func (*MetricsLogSet) ProtoMessage()               {}
func (*MetricsLogSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MetricsLogSet) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *MetricsLogSet) GetMetricsLogs() []*MetricsLog {
	if m != nil {
		return m.MetricsLogs
	}
	return nil
}

func (m *MetricsLogSet) GetWorkerStatus() State {
	if m != nil {
		return m.WorkerStatus
	}
	return State_PENDING
}

type Metrics struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Metrics) Reset()                    { *m = Metrics{} }
func (m *Metrics) String() string            { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()               {}
func (*Metrics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Metrics) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metrics) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MetricsLog struct {
	Name   string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *MetricsLog) Reset()                    { *m = MetricsLog{} }
func (m *MetricsLog) String() string            { return proto.CompactTextString(m) }
func (*MetricsLog) ProtoMessage()               {}
func (*MetricsLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MetricsLog) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricsLog) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SuggestionParameter struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SuggestionParameter) Reset()                    { *m = SuggestionParameter{} }
func (m *SuggestionParameter) String() string            { return proto.CompactTextString(m) }
func (*SuggestionParameter) ProtoMessage()               {}
func (*SuggestionParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SuggestionParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SuggestionParameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EarlyStoppingParameter struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *EarlyStoppingParameter) Reset()                    { *m = EarlyStoppingParameter{} }
func (m *EarlyStoppingParameter) String() string            { return proto.CompactTextString(m) }
func (*EarlyStoppingParameter) ProtoMessage()               {}
func (*EarlyStoppingParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *EarlyStoppingParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EarlyStoppingParameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Tag struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MountConf struct {
	Pvc  string `protobuf:"bytes,1,opt,name=pvc" json:"pvc,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *MountConf) Reset()                    { *m = MountConf{} }
func (m *MountConf) String() string            { return proto.CompactTextString(m) }
func (*MountConf) ProtoMessage()               {}
func (*MountConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MountConf) GetPvc() string {
	if m != nil {
		return m.Pvc
	}
	return ""
}

func (m *MountConf) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Toleration struct {
	Effect   string `protobuf:"bytes,1,opt,name=effect" json:"effect,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator string `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *Toleration) Reset()                    { *m = Toleration{} }
func (m *Toleration) String() string            { return proto.CompactTextString(m) }
func (*Toleration) ProtoMessage()               {}
func (*Toleration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Toleration) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *Toleration) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Toleration) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *Toleration) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StudyOverview struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *StudyOverview) Reset()                    { *m = StudyOverview{} }
func (m *StudyOverview) String() string            { return proto.CompactTextString(m) }
func (*StudyOverview) ProtoMessage()               {}
func (*StudyOverview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StudyOverview) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StudyOverview) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StudyOverview) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StudyOverview) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Trial struct {
	TrialId        string       `protobuf:"bytes,1,opt,name=trial_id,json=trialId" json:"trial_id,omitempty"`
	StudyId        string       `protobuf:"bytes,2,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	ParameterSet   []*Parameter `protobuf:"bytes,3,rep,name=parameter_set,json=parameterSet" json:"parameter_set,omitempty"`
	ObjectiveValue string       `protobuf:"bytes,4,opt,name=objective_value,json=objectiveValue" json:"objective_value,omitempty"`
	Tags           []*Tag       `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
}

func (m *Trial) Reset()                    { *m = Trial{} }
func (m *Trial) String() string            { return proto.CompactTextString(m) }
func (*Trial) ProtoMessage()               {}
func (*Trial) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Trial) GetTrialId() string {
	if m != nil {
		return m.TrialId
	}
	return ""
}

func (m *Trial) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *Trial) GetParameterSet() []*Parameter {
	if m != nil {
		return m.ParameterSet
	}
	return nil
}

func (m *Trial) GetObjectiveValue() string {
	if m != nil {
		return m.ObjectiveValue
	}
	return ""
}

func (m *Trial) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type WorkerConfig struct {
	Image           string            `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Command         []string          `protobuf:"bytes,2,rep,name=command" json:"command,omitempty"`
	Gpu             int32             `protobuf:"varint,3,opt,name=gpu" json:"gpu,omitempty"`
	Cpu             int32             `protobuf:"varint,4,opt,name=cpu" json:"cpu,omitempty"`
	Memory          string            `protobuf:"bytes,5,opt,name=memory" json:"memory,omitempty"`
	Scheduler       string            `protobuf:"bytes,6,opt,name=scheduler" json:"scheduler,omitempty"`
	Mount           *MountConf        `protobuf:"bytes,7,opt,name=mount" json:"mount,omitempty"`
	PullSecret      string            `protobuf:"bytes,8,opt,name=pull_secret,json=pullSecret" json:"pull_secret,omitempty"`
	Annotations     map[string]string `protobuf:"bytes,9,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tolerations     []*Toleration     `protobuf:"bytes,10,rep,name=tolerations" json:"tolerations,omitempty"`
	Labels          map[string]string `protobuf:"bytes,11,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContainerSuffix string            `protobuf:"bytes,12,opt,name=container_suffix,json=containerSuffix" json:"container_suffix,omitempty"`
	EnvVars         map[string]string `protobuf:"bytes,13,rep,name=env_vars,json=envVars" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *WorkerConfig) Reset()                    { *m = WorkerConfig{} }
func (m *WorkerConfig) String() string            { return proto.CompactTextString(m) }
func (*WorkerConfig) ProtoMessage()               {}
func (*WorkerConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *WorkerConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *WorkerConfig) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *WorkerConfig) GetGpu() int32 {
	if m != nil {
		return m.Gpu
	}
	return 0
}

func (m *WorkerConfig) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *WorkerConfig) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

func (m *WorkerConfig) GetScheduler() string {
	if m != nil {
		return m.Scheduler
	}
	return ""
}

func (m *WorkerConfig) GetMount() *MountConf {
	if m != nil {
		return m.Mount
	}
	return nil
}

func (m *WorkerConfig) GetPullSecret() string {
	if m != nil {
		return m.PullSecret
	}
	return ""
}

func (m *WorkerConfig) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *WorkerConfig) GetTolerations() []*Toleration {
	if m != nil {
		return m.Tolerations
	}
	return nil
}

func (m *WorkerConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WorkerConfig) GetContainerSuffix() string {
	if m != nil {
		return m.ContainerSuffix
	}
	return ""
}

func (m *WorkerConfig) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

type Worker struct {
	WorkerId string        `protobuf:"bytes,1,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	StudyId  string        `protobuf:"bytes,2,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	TrialId  string        `protobuf:"bytes,3,opt,name=trial_id,json=trialId" json:"trial_id,omitempty"`
	Runtime  string        `protobuf:"bytes,4,opt,name=runtime" json:"runtime,omitempty"`
	Status   State         `protobuf:"varint,5,opt,name=status,enum=api.State" json:"status,omitempty"`
	Config   *WorkerConfig `protobuf:"bytes,6,opt,name=config" json:"config,omitempty"`
	Tags     []*Tag        `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *Worker) Reset()                    { *m = Worker{} }
func (m *Worker) String() string            { return proto.CompactTextString(m) }
func (*Worker) ProtoMessage()               {}
func (*Worker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Worker) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *Worker) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *Worker) GetTrialId() string {
	if m != nil {
		return m.TrialId
	}
	return ""
}

func (m *Worker) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *Worker) GetStatus() State {
	if m != nil {
		return m.Status
	}
	return State_PENDING
}

func (m *Worker) GetConfig() *WorkerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Worker) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type StudyConfig struct {
	Name               string                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Owner              string                        `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	OptimizationType   OptimizationType              `protobuf:"varint,3,opt,name=optimization_type,json=optimizationType,enum=api.OptimizationType" json:"optimization_type,omitempty"`
	OptimizationGoal   float64                       `protobuf:"fixed64,4,opt,name=optimization_goal,json=optimizationGoal" json:"optimization_goal,omitempty"`
	ParameterConfigs   *StudyConfig_ParameterConfigs `protobuf:"bytes,5,opt,name=parameter_configs,json=parameterConfigs" json:"parameter_configs,omitempty"`
	AccessPermissions  []string                      `protobuf:"bytes,6,rep,name=access_permissions,json=accessPermissions" json:"access_permissions,omitempty"`
	Tags               []*Tag                        `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	ObjectiveValueName string                        `protobuf:"bytes,8,opt,name=objective_value_name,json=objectiveValueName" json:"objective_value_name,omitempty"`
	Metrics            []string                      `protobuf:"bytes,9,rep,name=metrics" json:"metrics,omitempty"`
}

func (m *StudyConfig) Reset()                    { *m = StudyConfig{} }
func (m *StudyConfig) String() string            { return proto.CompactTextString(m) }
func (*StudyConfig) ProtoMessage()               {}
func (*StudyConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *StudyConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StudyConfig) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StudyConfig) GetOptimizationType() OptimizationType {
	if m != nil {
		return m.OptimizationType
	}
	return OptimizationType_UNKNOWN_OPTIMIZATION
}

func (m *StudyConfig) GetOptimizationGoal() float64 {
	if m != nil {
		return m.OptimizationGoal
	}
	return 0
}

func (m *StudyConfig) GetParameterConfigs() *StudyConfig_ParameterConfigs {
	if m != nil {
		return m.ParameterConfigs
	}
	return nil
}

func (m *StudyConfig) GetAccessPermissions() []string {
	if m != nil {
		return m.AccessPermissions
	}
	return nil
}

func (m *StudyConfig) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *StudyConfig) GetObjectiveValueName() string {
	if m != nil {
		return m.ObjectiveValueName
	}
	return ""
}

func (m *StudyConfig) GetMetrics() []string {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type StudyConfig_ParameterConfigs struct {
	Configs []*ParameterConfig `protobuf:"bytes,1,rep,name=configs" json:"configs,omitempty"`
}

func (m *StudyConfig_ParameterConfigs) Reset()         { *m = StudyConfig_ParameterConfigs{} }
func (m *StudyConfig_ParameterConfigs) String() string { return proto.CompactTextString(m) }
func (*StudyConfig_ParameterConfigs) ProtoMessage()    {}
func (*StudyConfig_ParameterConfigs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 0}
}

func (m *StudyConfig_ParameterConfigs) GetConfigs() []*ParameterConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

type CreateStudyRequest struct {
	StudyConfig *StudyConfig `protobuf:"bytes,1,opt,name=study_config,json=studyConfig" json:"study_config,omitempty"`
}

func (m *CreateStudyRequest) Reset()                    { *m = CreateStudyRequest{} }
func (m *CreateStudyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateStudyRequest) ProtoMessage()               {}
func (*CreateStudyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CreateStudyRequest) GetStudyConfig() *StudyConfig {
	if m != nil {
		return m.StudyConfig
	}
	return nil
}

type CreateStudyReply struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *CreateStudyReply) Reset()                    { *m = CreateStudyReply{} }
func (m *CreateStudyReply) String() string            { return proto.CompactTextString(m) }
func (*CreateStudyReply) ProtoMessage()               {}
func (*CreateStudyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CreateStudyReply) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type StopStudyRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *StopStudyRequest) Reset()                    { *m = StopStudyRequest{} }
func (m *StopStudyRequest) String() string            { return proto.CompactTextString(m) }
func (*StopStudyRequest) ProtoMessage()               {}
func (*StopStudyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *StopStudyRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type StopStudyReply struct {
}

func (m *StopStudyReply) Reset()                    { *m = StopStudyReply{} }
func (m *StopStudyReply) String() string            { return proto.CompactTextString(m) }
func (*StopStudyReply) ProtoMessage()               {}
func (*StopStudyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type GetStudyRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *GetStudyRequest) Reset()                    { *m = GetStudyRequest{} }
func (m *GetStudyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStudyRequest) ProtoMessage()               {}
func (*GetStudyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetStudyRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type GetStudyReply struct {
	StudyConfig *StudyConfig `protobuf:"bytes,1,opt,name=study_config,json=studyConfig" json:"study_config,omitempty"`
}

func (m *GetStudyReply) Reset()                    { *m = GetStudyReply{} }
func (m *GetStudyReply) String() string            { return proto.CompactTextString(m) }
func (*GetStudyReply) ProtoMessage()               {}
func (*GetStudyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetStudyReply) GetStudyConfig() *StudyConfig {
	if m != nil {
		return m.StudyConfig
	}
	return nil
}

type GetStudyListRequest struct {
}

func (m *GetStudyListRequest) Reset()                    { *m = GetStudyListRequest{} }
func (m *GetStudyListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStudyListRequest) ProtoMessage()               {}
func (*GetStudyListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type GetStudyListReply struct {
	StudyOverviews []*StudyOverview `protobuf:"bytes,1,rep,name=study_overviews,json=studyOverviews" json:"study_overviews,omitempty"`
}

func (m *GetStudyListReply) Reset()                    { *m = GetStudyListReply{} }
func (m *GetStudyListReply) String() string            { return proto.CompactTextString(m) }
func (*GetStudyListReply) ProtoMessage()               {}
func (*GetStudyListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GetStudyListReply) GetStudyOverviews() []*StudyOverview {
	if m != nil {
		return m.StudyOverviews
	}
	return nil
}

type CreateTrialRequest struct {
	Trial *Trial `protobuf:"bytes,1,opt,name=trial" json:"trial,omitempty"`
}

func (m *CreateTrialRequest) Reset()                    { *m = CreateTrialRequest{} }
func (m *CreateTrialRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTrialRequest) ProtoMessage()               {}
func (*CreateTrialRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateTrialRequest) GetTrial() *Trial {
	if m != nil {
		return m.Trial
	}
	return nil
}

type CreateTrialReply struct {
	TrialId string `protobuf:"bytes,1,opt,name=trial_id,json=trialId" json:"trial_id,omitempty"`
}

func (m *CreateTrialReply) Reset()                    { *m = CreateTrialReply{} }
func (m *CreateTrialReply) String() string            { return proto.CompactTextString(m) }
func (*CreateTrialReply) ProtoMessage()               {}
func (*CreateTrialReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateTrialReply) GetTrialId() string {
	if m != nil {
		return m.TrialId
	}
	return ""
}

type GetTrialsRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *GetTrialsRequest) Reset()                    { *m = GetTrialsRequest{} }
func (m *GetTrialsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTrialsRequest) ProtoMessage()               {}
func (*GetTrialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GetTrialsRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type GetTrialsReply struct {
	Trials []*Trial `protobuf:"bytes,1,rep,name=trials" json:"trials,omitempty"`
}

func (m *GetTrialsReply) Reset()                    { *m = GetTrialsReply{} }
func (m *GetTrialsReply) String() string            { return proto.CompactTextString(m) }
func (*GetTrialsReply) ProtoMessage()               {}
func (*GetTrialsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *GetTrialsReply) GetTrials() []*Trial {
	if m != nil {
		return m.Trials
	}
	return nil
}

type RunTrialRequest struct {
	StudyId      string        `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	TrialId      string        `protobuf:"bytes,2,opt,name=trial_id,json=trialId" json:"trial_id,omitempty"`
	Runtime      string        `protobuf:"bytes,3,opt,name=runtime" json:"runtime,omitempty"`
	WorkerConfig *WorkerConfig `protobuf:"bytes,4,opt,name=worker_config,json=workerConfig" json:"worker_config,omitempty"`
}

func (m *RunTrialRequest) Reset()                    { *m = RunTrialRequest{} }
func (m *RunTrialRequest) String() string            { return proto.CompactTextString(m) }
func (*RunTrialRequest) ProtoMessage()               {}
func (*RunTrialRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *RunTrialRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *RunTrialRequest) GetTrialId() string {
	if m != nil {
		return m.TrialId
	}
	return ""
}

func (m *RunTrialRequest) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *RunTrialRequest) GetWorkerConfig() *WorkerConfig {
	if m != nil {
		return m.WorkerConfig
	}
	return nil
}

type RunTrialReply struct {
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
}

func (m *RunTrialReply) Reset()                    { *m = RunTrialReply{} }
func (m *RunTrialReply) String() string            { return proto.CompactTextString(m) }
func (*RunTrialReply) ProtoMessage()               {}
func (*RunTrialReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *RunTrialReply) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type StopWorkersRequest struct {
	StudyId    string   `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	WorkerIds  []string `protobuf:"bytes,2,rep,name=worker_ids,json=workerIds" json:"worker_ids,omitempty"`
	IsComplete bool     `protobuf:"varint,3,opt,name=is_complete,json=isComplete" json:"is_complete,omitempty"`
}

func (m *StopWorkersRequest) Reset()                    { *m = StopWorkersRequest{} }
func (m *StopWorkersRequest) String() string            { return proto.CompactTextString(m) }
func (*StopWorkersRequest) ProtoMessage()               {}
func (*StopWorkersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *StopWorkersRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *StopWorkersRequest) GetWorkerIds() []string {
	if m != nil {
		return m.WorkerIds
	}
	return nil
}

func (m *StopWorkersRequest) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

type StopWorkersReply struct {
}

func (m *StopWorkersReply) Reset()                    { *m = StopWorkersReply{} }
func (m *StopWorkersReply) String() string            { return proto.CompactTextString(m) }
func (*StopWorkersReply) ProtoMessage()               {}
func (*StopWorkersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type GetWorkersRequest struct {
	StudyId  string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	TrialId  string `protobuf:"bytes,2,opt,name=trial_id,json=trialId" json:"trial_id,omitempty"`
	WorkerId string `protobuf:"bytes,3,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
}

func (m *GetWorkersRequest) Reset()                    { *m = GetWorkersRequest{} }
func (m *GetWorkersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWorkersRequest) ProtoMessage()               {}
func (*GetWorkersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *GetWorkersRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *GetWorkersRequest) GetTrialId() string {
	if m != nil {
		return m.TrialId
	}
	return ""
}

func (m *GetWorkersRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type GetWorkersReply struct {
	Workers []*Worker `protobuf:"bytes,1,rep,name=workers" json:"workers,omitempty"`
}

func (m *GetWorkersReply) Reset()                    { *m = GetWorkersReply{} }
func (m *GetWorkersReply) String() string            { return proto.CompactTextString(m) }
func (*GetWorkersReply) ProtoMessage()               {}
func (*GetWorkersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *GetWorkersReply) GetWorkers() []*Worker {
	if m != nil {
		return m.Workers
	}
	return nil
}

type GetSuggestionsRequest struct {
	StudyId             string   `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	SuggestionAlgorithm string   `protobuf:"bytes,2,opt,name=suggestion_algorithm,json=suggestionAlgorithm" json:"suggestion_algorithm,omitempty"`
	RequestNumber       int32    `protobuf:"varint,3,opt,name=request_number,json=requestNumber" json:"request_number,omitempty"`
	LogWorkerIds        []string `protobuf:"bytes,4,rep,name=log_worker_ids,json=logWorkerIds" json:"log_worker_ids,omitempty"`
	ParamId             string   `protobuf:"bytes,5,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *GetSuggestionsRequest) Reset()                    { *m = GetSuggestionsRequest{} }
func (m *GetSuggestionsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionsRequest) ProtoMessage()               {}
func (*GetSuggestionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *GetSuggestionsRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *GetSuggestionsRequest) GetSuggestionAlgorithm() string {
	if m != nil {
		return m.SuggestionAlgorithm
	}
	return ""
}

func (m *GetSuggestionsRequest) GetRequestNumber() int32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *GetSuggestionsRequest) GetLogWorkerIds() []string {
	if m != nil {
		return m.LogWorkerIds
	}
	return nil
}

func (m *GetSuggestionsRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetSuggestionsReply struct {
	Trials []*Trial `protobuf:"bytes,1,rep,name=trials" json:"trials,omitempty"`
}

func (m *GetSuggestionsReply) Reset()                    { *m = GetSuggestionsReply{} }
func (m *GetSuggestionsReply) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionsReply) ProtoMessage()               {}
func (*GetSuggestionsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GetSuggestionsReply) GetTrials() []*Trial {
	if m != nil {
		return m.Trials
	}
	return nil
}

type GetShouldStopWorkersRequest struct {
	StudyId                string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	EarlyStoppingAlgorithm string `protobuf:"bytes,2,opt,name=early_stopping_algorithm,json=earlyStoppingAlgorithm" json:"early_stopping_algorithm,omitempty"`
	ParamId                string `protobuf:"bytes,5,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *GetShouldStopWorkersRequest) Reset()                    { *m = GetShouldStopWorkersRequest{} }
func (m *GetShouldStopWorkersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShouldStopWorkersRequest) ProtoMessage()               {}
func (*GetShouldStopWorkersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *GetShouldStopWorkersRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *GetShouldStopWorkersRequest) GetEarlyStoppingAlgorithm() string {
	if m != nil {
		return m.EarlyStoppingAlgorithm
	}
	return ""
}

func (m *GetShouldStopWorkersRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetShouldStopWorkersReply struct {
	ShouldStopWorkerIds []string `protobuf:"bytes,1,rep,name=should_stop_worker_ids,json=shouldStopWorkerIds" json:"should_stop_worker_ids,omitempty"`
}

func (m *GetShouldStopWorkersReply) Reset()                    { *m = GetShouldStopWorkersReply{} }
func (m *GetShouldStopWorkersReply) String() string            { return proto.CompactTextString(m) }
func (*GetShouldStopWorkersReply) ProtoMessage()               {}
func (*GetShouldStopWorkersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GetShouldStopWorkersReply) GetShouldStopWorkerIds() []string {
	if m != nil {
		return m.ShouldStopWorkerIds
	}
	return nil
}

type GetMetricsRequest struct {
	StudyId      string   `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	WorkerIds    []string `protobuf:"bytes,2,rep,name=worker_ids,json=workerIds" json:"worker_ids,omitempty"`
	MetricsNames []string `protobuf:"bytes,3,rep,name=metrics_names,json=metricsNames" json:"metrics_names,omitempty"`
}

func (m *GetMetricsRequest) Reset()                    { *m = GetMetricsRequest{} }
func (m *GetMetricsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMetricsRequest) ProtoMessage()               {}
func (*GetMetricsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GetMetricsRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *GetMetricsRequest) GetWorkerIds() []string {
	if m != nil {
		return m.WorkerIds
	}
	return nil
}

func (m *GetMetricsRequest) GetMetricsNames() []string {
	if m != nil {
		return m.MetricsNames
	}
	return nil
}

type GetMetricsReply struct {
	MetricsLogSets []*MetricsLogSet `protobuf:"bytes,1,rep,name=metrics_log_sets,json=metricsLogSets" json:"metrics_log_sets,omitempty"`
}

func (m *GetMetricsReply) Reset()                    { *m = GetMetricsReply{} }
func (m *GetMetricsReply) String() string            { return proto.CompactTextString(m) }
func (*GetMetricsReply) ProtoMessage()               {}
func (*GetMetricsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *GetMetricsReply) GetMetricsLogSets() []*MetricsLogSet {
	if m != nil {
		return m.MetricsLogSets
	}
	return nil
}

type ModelInfo struct {
	StudyName  string       `protobuf:"bytes,1,opt,name=study_name,json=studyName" json:"study_name,omitempty"`
	WorkerId   string       `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	Parameters []*Parameter `protobuf:"bytes,3,rep,name=parameters" json:"parameters,omitempty"`
	Metrics    []*Metrics   `protobuf:"bytes,4,rep,name=metrics" json:"metrics,omitempty"`
	ModelPath  string       `protobuf:"bytes,5,opt,name=model_path,json=modelPath" json:"model_path,omitempty"`
}

func (m *ModelInfo) Reset()                    { *m = ModelInfo{} }
func (m *ModelInfo) String() string            { return proto.CompactTextString(m) }
func (*ModelInfo) ProtoMessage()               {}
func (*ModelInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ModelInfo) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

func (m *ModelInfo) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *ModelInfo) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *ModelInfo) GetMetrics() []*Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *ModelInfo) GetModelPath() string {
	if m != nil {
		return m.ModelPath
	}
	return ""
}

type DataSetInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *DataSetInfo) Reset()                    { *m = DataSetInfo{} }
func (m *DataSetInfo) String() string            { return proto.CompactTextString(m) }
func (*DataSetInfo) ProtoMessage()               {}
func (*DataSetInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *DataSetInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataSetInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SaveStudyRequest struct {
	StudyName   string `protobuf:"bytes,1,opt,name=study_name,json=studyName" json:"study_name,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *SaveStudyRequest) Reset()                    { *m = SaveStudyRequest{} }
func (m *SaveStudyRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveStudyRequest) ProtoMessage()               {}
func (*SaveStudyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *SaveStudyRequest) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

func (m *SaveStudyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *SaveStudyRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type SaveStudyReply struct {
}

func (m *SaveStudyReply) Reset()                    { *m = SaveStudyReply{} }
func (m *SaveStudyReply) String() string            { return proto.CompactTextString(m) }
func (*SaveStudyReply) ProtoMessage()               {}
func (*SaveStudyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type SaveModelRequest struct {
	Model       *ModelInfo   `protobuf:"bytes,1,opt,name=model" json:"model,omitempty"`
	DataSet     *DataSetInfo `protobuf:"bytes,2,opt,name=data_set,json=dataSet" json:"data_set,omitempty"`
	TensorBoard bool         `protobuf:"varint,3,opt,name=tensor_board,json=tensorBoard" json:"tensor_board,omitempty"`
}

func (m *SaveModelRequest) Reset()                    { *m = SaveModelRequest{} }
func (m *SaveModelRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveModelRequest) ProtoMessage()               {}
func (*SaveModelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *SaveModelRequest) GetModel() *ModelInfo {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *SaveModelRequest) GetDataSet() *DataSetInfo {
	if m != nil {
		return m.DataSet
	}
	return nil
}

func (m *SaveModelRequest) GetTensorBoard() bool {
	if m != nil {
		return m.TensorBoard
	}
	return false
}

type SaveModelReply struct {
}

func (m *SaveModelReply) Reset()                    { *m = SaveModelReply{} }
func (m *SaveModelReply) String() string            { return proto.CompactTextString(m) }
func (*SaveModelReply) ProtoMessage()               {}
func (*SaveModelReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

type GetSavedStudiesRequest struct {
}

func (m *GetSavedStudiesRequest) Reset()                    { *m = GetSavedStudiesRequest{} }
func (m *GetSavedStudiesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSavedStudiesRequest) ProtoMessage()               {}
func (*GetSavedStudiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

type GetSavedStudiesReply struct {
	Studies []*StudyOverview `protobuf:"bytes,1,rep,name=studies" json:"studies,omitempty"`
}

func (m *GetSavedStudiesReply) Reset()                    { *m = GetSavedStudiesReply{} }
func (m *GetSavedStudiesReply) String() string            { return proto.CompactTextString(m) }
func (*GetSavedStudiesReply) ProtoMessage()               {}
func (*GetSavedStudiesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *GetSavedStudiesReply) GetStudies() []*StudyOverview {
	if m != nil {
		return m.Studies
	}
	return nil
}

type GetSavedModelsRequest struct {
	StudyName string `protobuf:"bytes,1,opt,name=study_name,json=studyName" json:"study_name,omitempty"`
}

func (m *GetSavedModelsRequest) Reset()                    { *m = GetSavedModelsRequest{} }
func (m *GetSavedModelsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSavedModelsRequest) ProtoMessage()               {}
func (*GetSavedModelsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *GetSavedModelsRequest) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

type GetSavedModelsReply struct {
	Models []*ModelInfo `protobuf:"bytes,1,rep,name=models" json:"models,omitempty"`
}

func (m *GetSavedModelsReply) Reset()                    { *m = GetSavedModelsReply{} }
func (m *GetSavedModelsReply) String() string            { return proto.CompactTextString(m) }
func (*GetSavedModelsReply) ProtoMessage()               {}
func (*GetSavedModelsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *GetSavedModelsReply) GetModels() []*ModelInfo {
	if m != nil {
		return m.Models
	}
	return nil
}

type GetSavedModelRequest struct {
	StudyName string `protobuf:"bytes,1,opt,name=study_name,json=studyName" json:"study_name,omitempty"`
	WorkerId  string `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
}

func (m *GetSavedModelRequest) Reset()                    { *m = GetSavedModelRequest{} }
func (m *GetSavedModelRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSavedModelRequest) ProtoMessage()               {}
func (*GetSavedModelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *GetSavedModelRequest) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

func (m *GetSavedModelRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type GetSavedModelReply struct {
	Model *ModelInfo `protobuf:"bytes,1,opt,name=model" json:"model,omitempty"`
}

func (m *GetSavedModelReply) Reset()                    { *m = GetSavedModelReply{} }
func (m *GetSavedModelReply) String() string            { return proto.CompactTextString(m) }
func (*GetSavedModelReply) ProtoMessage()               {}
func (*GetSavedModelReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *GetSavedModelReply) GetModel() *ModelInfo {
	if m != nil {
		return m.Model
	}
	return nil
}

type SetSuggestionParametersRequest struct {
	StudyId              string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	SuggestionAlgorithm  string                 `protobuf:"bytes,2,opt,name=suggestion_algorithm,json=suggestionAlgorithm" json:"suggestion_algorithm,omitempty"`
	ParamId              string                 `protobuf:"bytes,3,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
	SuggestionParameters []*SuggestionParameter `protobuf:"bytes,4,rep,name=suggestion_parameters,json=suggestionParameters" json:"suggestion_parameters,omitempty"`
}

func (m *SetSuggestionParametersRequest) Reset()                    { *m = SetSuggestionParametersRequest{} }
func (m *SetSuggestionParametersRequest) String() string            { return proto.CompactTextString(m) }
func (*SetSuggestionParametersRequest) ProtoMessage()               {}
func (*SetSuggestionParametersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *SetSuggestionParametersRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *SetSuggestionParametersRequest) GetSuggestionAlgorithm() string {
	if m != nil {
		return m.SuggestionAlgorithm
	}
	return ""
}

func (m *SetSuggestionParametersRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

func (m *SetSuggestionParametersRequest) GetSuggestionParameters() []*SuggestionParameter {
	if m != nil {
		return m.SuggestionParameters
	}
	return nil
}

type SetSuggestionParametersReply struct {
	ParamId string `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *SetSuggestionParametersReply) Reset()                    { *m = SetSuggestionParametersReply{} }
func (m *SetSuggestionParametersReply) String() string            { return proto.CompactTextString(m) }
func (*SetSuggestionParametersReply) ProtoMessage()               {}
func (*SetSuggestionParametersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *SetSuggestionParametersReply) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetSuggestionParametersRequest struct {
	ParamId string `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *GetSuggestionParametersRequest) Reset()                    { *m = GetSuggestionParametersRequest{} }
func (m *GetSuggestionParametersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionParametersRequest) ProtoMessage()               {}
func (*GetSuggestionParametersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *GetSuggestionParametersRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetSuggestionParametersReply struct {
	SuggestionParameters []*SuggestionParameter `protobuf:"bytes,1,rep,name=suggestion_parameters,json=suggestionParameters" json:"suggestion_parameters,omitempty"`
}

func (m *GetSuggestionParametersReply) Reset()                    { *m = GetSuggestionParametersReply{} }
func (m *GetSuggestionParametersReply) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionParametersReply) ProtoMessage()               {}
func (*GetSuggestionParametersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *GetSuggestionParametersReply) GetSuggestionParameters() []*SuggestionParameter {
	if m != nil {
		return m.SuggestionParameters
	}
	return nil
}

type GetSuggestionParameterListRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *GetSuggestionParameterListRequest) Reset()         { *m = GetSuggestionParameterListRequest{} }
func (m *GetSuggestionParameterListRequest) String() string { return proto.CompactTextString(m) }
func (*GetSuggestionParameterListRequest) ProtoMessage()    {}
func (*GetSuggestionParameterListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56}
}

func (m *GetSuggestionParameterListRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type SuggestionParameterSet struct {
	ParamId              string                 `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
	SuggestionAlgorithm  string                 `protobuf:"bytes,2,opt,name=suggestion_algorithm,json=suggestionAlgorithm" json:"suggestion_algorithm,omitempty"`
	SuggestionParameters []*SuggestionParameter `protobuf:"bytes,3,rep,name=suggestion_parameters,json=suggestionParameters" json:"suggestion_parameters,omitempty"`
}

func (m *SuggestionParameterSet) Reset()                    { *m = SuggestionParameterSet{} }
func (m *SuggestionParameterSet) String() string            { return proto.CompactTextString(m) }
func (*SuggestionParameterSet) ProtoMessage()               {}
func (*SuggestionParameterSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *SuggestionParameterSet) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

func (m *SuggestionParameterSet) GetSuggestionAlgorithm() string {
	if m != nil {
		return m.SuggestionAlgorithm
	}
	return ""
}

func (m *SuggestionParameterSet) GetSuggestionParameters() []*SuggestionParameter {
	if m != nil {
		return m.SuggestionParameters
	}
	return nil
}

type GetSuggestionParameterListReply struct {
	SuggestionParameterSets []*SuggestionParameterSet `protobuf:"bytes,1,rep,name=suggestion_parameter_sets,json=suggestionParameterSets" json:"suggestion_parameter_sets,omitempty"`
}

func (m *GetSuggestionParameterListReply) Reset()         { *m = GetSuggestionParameterListReply{} }
func (m *GetSuggestionParameterListReply) String() string { return proto.CompactTextString(m) }
func (*GetSuggestionParameterListReply) ProtoMessage()    {}
func (*GetSuggestionParameterListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{58}
}

func (m *GetSuggestionParameterListReply) GetSuggestionParameterSets() []*SuggestionParameterSet {
	if m != nil {
		return m.SuggestionParameterSets
	}
	return nil
}

type StopSuggestionRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *StopSuggestionRequest) Reset()                    { *m = StopSuggestionRequest{} }
func (m *StopSuggestionRequest) String() string            { return proto.CompactTextString(m) }
func (*StopSuggestionRequest) ProtoMessage()               {}
func (*StopSuggestionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *StopSuggestionRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type StopSuggestionReply struct {
}

func (m *StopSuggestionReply) Reset()                    { *m = StopSuggestionReply{} }
func (m *StopSuggestionReply) String() string            { return proto.CompactTextString(m) }
func (*StopSuggestionReply) ProtoMessage()               {}
func (*StopSuggestionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

type SetEarlyStoppingParametersRequest struct {
	StudyId                 string                    `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
	EarlyStoppingAlgorithm  string                    `protobuf:"bytes,2,opt,name=early_stopping_algorithm,json=earlyStoppingAlgorithm" json:"early_stopping_algorithm,omitempty"`
	ParamId                 string                    `protobuf:"bytes,3,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
	EarlyStoppingParameters []*EarlyStoppingParameter `protobuf:"bytes,4,rep,name=early_stopping_parameters,json=earlyStoppingParameters" json:"early_stopping_parameters,omitempty"`
}

func (m *SetEarlyStoppingParametersRequest) Reset()         { *m = SetEarlyStoppingParametersRequest{} }
func (m *SetEarlyStoppingParametersRequest) String() string { return proto.CompactTextString(m) }
func (*SetEarlyStoppingParametersRequest) ProtoMessage()    {}
func (*SetEarlyStoppingParametersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{61}
}

func (m *SetEarlyStoppingParametersRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

func (m *SetEarlyStoppingParametersRequest) GetEarlyStoppingAlgorithm() string {
	if m != nil {
		return m.EarlyStoppingAlgorithm
	}
	return ""
}

func (m *SetEarlyStoppingParametersRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

func (m *SetEarlyStoppingParametersRequest) GetEarlyStoppingParameters() []*EarlyStoppingParameter {
	if m != nil {
		return m.EarlyStoppingParameters
	}
	return nil
}

type SetEarlyStoppingParametersReply struct {
	ParamId string `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *SetEarlyStoppingParametersReply) Reset()         { *m = SetEarlyStoppingParametersReply{} }
func (m *SetEarlyStoppingParametersReply) String() string { return proto.CompactTextString(m) }
func (*SetEarlyStoppingParametersReply) ProtoMessage()    {}
func (*SetEarlyStoppingParametersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{62}
}

func (m *SetEarlyStoppingParametersReply) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetEarlyStoppingParametersRequest struct {
	ParamId string `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
}

func (m *GetEarlyStoppingParametersRequest) Reset()         { *m = GetEarlyStoppingParametersRequest{} }
func (m *GetEarlyStoppingParametersRequest) String() string { return proto.CompactTextString(m) }
func (*GetEarlyStoppingParametersRequest) ProtoMessage()    {}
func (*GetEarlyStoppingParametersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{63}
}

func (m *GetEarlyStoppingParametersRequest) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

type GetEarlyStoppingParametersReply struct {
	EarlyStoppingParameters []*EarlyStoppingParameter `protobuf:"bytes,1,rep,name=early_stopping_parameters,json=earlyStoppingParameters" json:"early_stopping_parameters,omitempty"`
}

func (m *GetEarlyStoppingParametersReply) Reset()         { *m = GetEarlyStoppingParametersReply{} }
func (m *GetEarlyStoppingParametersReply) String() string { return proto.CompactTextString(m) }
func (*GetEarlyStoppingParametersReply) ProtoMessage()    {}
func (*GetEarlyStoppingParametersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64}
}

func (m *GetEarlyStoppingParametersReply) GetEarlyStoppingParameters() []*EarlyStoppingParameter {
	if m != nil {
		return m.EarlyStoppingParameters
	}
	return nil
}

type GetEarlyStoppingParameterListRequest struct {
	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId" json:"study_id,omitempty"`
}

func (m *GetEarlyStoppingParameterListRequest) Reset()         { *m = GetEarlyStoppingParameterListRequest{} }
func (m *GetEarlyStoppingParameterListRequest) String() string { return proto.CompactTextString(m) }
func (*GetEarlyStoppingParameterListRequest) ProtoMessage()    {}
func (*GetEarlyStoppingParameterListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65}
}

func (m *GetEarlyStoppingParameterListRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

type EarlyStoppingParameterSet struct {
	ParamId                 string                    `protobuf:"bytes,1,opt,name=param_id,json=paramId" json:"param_id,omitempty"`
	EarlyStoppingAlgorithm  string                    `protobuf:"bytes,2,opt,name=early_stopping_algorithm,json=earlyStoppingAlgorithm" json:"early_stopping_algorithm,omitempty"`
	EarlyStoppingParameters []*EarlyStoppingParameter `protobuf:"bytes,3,rep,name=early_stopping_parameters,json=earlyStoppingParameters" json:"early_stopping_parameters,omitempty"`
}

func (m *EarlyStoppingParameterSet) Reset()                    { *m = EarlyStoppingParameterSet{} }
func (m *EarlyStoppingParameterSet) String() string            { return proto.CompactTextString(m) }
func (*EarlyStoppingParameterSet) ProtoMessage()               {}
func (*EarlyStoppingParameterSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *EarlyStoppingParameterSet) GetParamId() string {
	if m != nil {
		return m.ParamId
	}
	return ""
}

func (m *EarlyStoppingParameterSet) GetEarlyStoppingAlgorithm() string {
	if m != nil {
		return m.EarlyStoppingAlgorithm
	}
	return ""
}

func (m *EarlyStoppingParameterSet) GetEarlyStoppingParameters() []*EarlyStoppingParameter {
	if m != nil {
		return m.EarlyStoppingParameters
	}
	return nil
}

type GetEarlyStoppingParameterListReply struct {
	EarlyStoppingParameterSets []*EarlyStoppingParameterSet `protobuf:"bytes,1,rep,name=early_stopping_parameter_sets,json=earlyStoppingParameterSets" json:"early_stopping_parameter_sets,omitempty"`
}

func (m *GetEarlyStoppingParameterListReply) Reset()         { *m = GetEarlyStoppingParameterListReply{} }
func (m *GetEarlyStoppingParameterListReply) String() string { return proto.CompactTextString(m) }
func (*GetEarlyStoppingParameterListReply) ProtoMessage()    {}
func (*GetEarlyStoppingParameterListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{67}
}

func (m *GetEarlyStoppingParameterListReply) GetEarlyStoppingParameterSets() []*EarlyStoppingParameterSet {
	if m != nil {
		return m.EarlyStoppingParameterSets
	}
	return nil
}

func init() {
	proto.RegisterType((*FeasibleSpace)(nil), "api.FeasibleSpace")
	proto.RegisterType((*ParameterConfig)(nil), "api.ParameterConfig")
	proto.RegisterType((*Parameter)(nil), "api.Parameter")
	proto.RegisterType((*MetricsLogSet)(nil), "api.MetricsLogSet")
	proto.RegisterType((*Metrics)(nil), "api.Metrics")
	proto.RegisterType((*MetricsLog)(nil), "api.MetricsLog")
	proto.RegisterType((*SuggestionParameter)(nil), "api.SuggestionParameter")
	proto.RegisterType((*EarlyStoppingParameter)(nil), "api.EarlyStoppingParameter")
	proto.RegisterType((*Tag)(nil), "api.Tag")
	proto.RegisterType((*MountConf)(nil), "api.MountConf")
	proto.RegisterType((*Toleration)(nil), "api.Toleration")
	proto.RegisterType((*StudyOverview)(nil), "api.StudyOverview")
	proto.RegisterType((*Trial)(nil), "api.Trial")
	proto.RegisterType((*WorkerConfig)(nil), "api.WorkerConfig")
	proto.RegisterType((*Worker)(nil), "api.Worker")
	proto.RegisterType((*StudyConfig)(nil), "api.StudyConfig")
	proto.RegisterType((*StudyConfig_ParameterConfigs)(nil), "api.StudyConfig.ParameterConfigs")
	proto.RegisterType((*CreateStudyRequest)(nil), "api.CreateStudyRequest")
	proto.RegisterType((*CreateStudyReply)(nil), "api.CreateStudyReply")
	proto.RegisterType((*StopStudyRequest)(nil), "api.StopStudyRequest")
	proto.RegisterType((*StopStudyReply)(nil), "api.StopStudyReply")
	proto.RegisterType((*GetStudyRequest)(nil), "api.GetStudyRequest")
	proto.RegisterType((*GetStudyReply)(nil), "api.GetStudyReply")
	proto.RegisterType((*GetStudyListRequest)(nil), "api.GetStudyListRequest")
	proto.RegisterType((*GetStudyListReply)(nil), "api.GetStudyListReply")
	proto.RegisterType((*CreateTrialRequest)(nil), "api.CreateTrialRequest")
	proto.RegisterType((*CreateTrialReply)(nil), "api.CreateTrialReply")
	proto.RegisterType((*GetTrialsRequest)(nil), "api.GetTrialsRequest")
	proto.RegisterType((*GetTrialsReply)(nil), "api.GetTrialsReply")
	proto.RegisterType((*RunTrialRequest)(nil), "api.RunTrialRequest")
	proto.RegisterType((*RunTrialReply)(nil), "api.RunTrialReply")
	proto.RegisterType((*StopWorkersRequest)(nil), "api.StopWorkersRequest")
	proto.RegisterType((*StopWorkersReply)(nil), "api.StopWorkersReply")
	proto.RegisterType((*GetWorkersRequest)(nil), "api.GetWorkersRequest")
	proto.RegisterType((*GetWorkersReply)(nil), "api.GetWorkersReply")
	proto.RegisterType((*GetSuggestionsRequest)(nil), "api.GetSuggestionsRequest")
	proto.RegisterType((*GetSuggestionsReply)(nil), "api.GetSuggestionsReply")
	proto.RegisterType((*GetShouldStopWorkersRequest)(nil), "api.GetShouldStopWorkersRequest")
	proto.RegisterType((*GetShouldStopWorkersReply)(nil), "api.GetShouldStopWorkersReply")
	proto.RegisterType((*GetMetricsRequest)(nil), "api.GetMetricsRequest")
	proto.RegisterType((*GetMetricsReply)(nil), "api.GetMetricsReply")
	proto.RegisterType((*ModelInfo)(nil), "api.ModelInfo")
	proto.RegisterType((*DataSetInfo)(nil), "api.DataSetInfo")
	proto.RegisterType((*SaveStudyRequest)(nil), "api.SaveStudyRequest")
	proto.RegisterType((*SaveStudyReply)(nil), "api.SaveStudyReply")
	proto.RegisterType((*SaveModelRequest)(nil), "api.SaveModelRequest")
	proto.RegisterType((*SaveModelReply)(nil), "api.SaveModelReply")
	proto.RegisterType((*GetSavedStudiesRequest)(nil), "api.GetSavedStudiesRequest")
	proto.RegisterType((*GetSavedStudiesReply)(nil), "api.GetSavedStudiesReply")
	proto.RegisterType((*GetSavedModelsRequest)(nil), "api.GetSavedModelsRequest")
	proto.RegisterType((*GetSavedModelsReply)(nil), "api.GetSavedModelsReply")
	proto.RegisterType((*GetSavedModelRequest)(nil), "api.GetSavedModelRequest")
	proto.RegisterType((*GetSavedModelReply)(nil), "api.GetSavedModelReply")
	proto.RegisterType((*SetSuggestionParametersRequest)(nil), "api.SetSuggestionParametersRequest")
	proto.RegisterType((*SetSuggestionParametersReply)(nil), "api.SetSuggestionParametersReply")
	proto.RegisterType((*GetSuggestionParametersRequest)(nil), "api.GetSuggestionParametersRequest")
	proto.RegisterType((*GetSuggestionParametersReply)(nil), "api.GetSuggestionParametersReply")
	proto.RegisterType((*GetSuggestionParameterListRequest)(nil), "api.GetSuggestionParameterListRequest")
	proto.RegisterType((*SuggestionParameterSet)(nil), "api.SuggestionParameterSet")
	proto.RegisterType((*GetSuggestionParameterListReply)(nil), "api.GetSuggestionParameterListReply")
	proto.RegisterType((*StopSuggestionRequest)(nil), "api.StopSuggestionRequest")
	proto.RegisterType((*StopSuggestionReply)(nil), "api.StopSuggestionReply")
	proto.RegisterType((*SetEarlyStoppingParametersRequest)(nil), "api.SetEarlyStoppingParametersRequest")
	proto.RegisterType((*SetEarlyStoppingParametersReply)(nil), "api.SetEarlyStoppingParametersReply")
	proto.RegisterType((*GetEarlyStoppingParametersRequest)(nil), "api.GetEarlyStoppingParametersRequest")
	proto.RegisterType((*GetEarlyStoppingParametersReply)(nil), "api.GetEarlyStoppingParametersReply")
	proto.RegisterType((*GetEarlyStoppingParameterListRequest)(nil), "api.GetEarlyStoppingParameterListRequest")
	proto.RegisterType((*EarlyStoppingParameterSet)(nil), "api.EarlyStoppingParameterSet")
	proto.RegisterType((*GetEarlyStoppingParameterListReply)(nil), "api.GetEarlyStoppingParameterListReply")
	proto.RegisterEnum("api.ParameterType", ParameterType_name, ParameterType_value)
	proto.RegisterEnum("api.OptimizationType", OptimizationType_name, OptimizationType_value)
	proto.RegisterEnum("api.State", State_name, State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Manager service

type ManagerClient interface {
	CreateStudy(ctx context.Context, in *CreateStudyRequest, opts ...grpc.CallOption) (*CreateStudyReply, error)
	StopStudy(ctx context.Context, in *StopStudyRequest, opts ...grpc.CallOption) (*StopStudyReply, error)
	GetStudy(ctx context.Context, in *GetStudyRequest, opts ...grpc.CallOption) (*GetStudyReply, error)
	GetStudyList(ctx context.Context, in *GetStudyListRequest, opts ...grpc.CallOption) (*GetStudyListReply, error)
	CreateTrial(ctx context.Context, in *CreateTrialRequest, opts ...grpc.CallOption) (*CreateTrialReply, error)
	GetTrials(ctx context.Context, in *GetTrialsRequest, opts ...grpc.CallOption) (*GetTrialsReply, error)
	RunTrial(ctx context.Context, in *RunTrialRequest, opts ...grpc.CallOption) (*RunTrialReply, error)
	StopWorkers(ctx context.Context, in *StopWorkersRequest, opts ...grpc.CallOption) (*StopWorkersReply, error)
	GetWorkers(ctx context.Context, in *GetWorkersRequest, opts ...grpc.CallOption) (*GetWorkersReply, error)
	GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error)
	GetShouldStopWorkers(ctx context.Context, in *GetShouldStopWorkersRequest, opts ...grpc.CallOption) (*GetShouldStopWorkersReply, error)
	GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsReply, error)
	SetSuggestionParameters(ctx context.Context, in *SetSuggestionParametersRequest, opts ...grpc.CallOption) (*SetSuggestionParametersReply, error)
	GetSuggestionParameters(ctx context.Context, in *GetSuggestionParametersRequest, opts ...grpc.CallOption) (*GetSuggestionParametersReply, error)
	GetSuggestionParameterList(ctx context.Context, in *GetSuggestionParameterListRequest, opts ...grpc.CallOption) (*GetSuggestionParameterListReply, error)
	SetEarlyStoppingParameters(ctx context.Context, in *SetEarlyStoppingParametersRequest, opts ...grpc.CallOption) (*SetEarlyStoppingParametersReply, error)
	GetEarlyStoppingParameters(ctx context.Context, in *GetEarlyStoppingParametersRequest, opts ...grpc.CallOption) (*GetEarlyStoppingParametersReply, error)
	GetEarlyStoppingParameterList(ctx context.Context, in *GetEarlyStoppingParameterListRequest, opts ...grpc.CallOption) (*GetEarlyStoppingParameterListReply, error)
	SaveStudy(ctx context.Context, in *SaveStudyRequest, opts ...grpc.CallOption) (*SaveStudyReply, error)
	SaveModel(ctx context.Context, in *SaveModelRequest, opts ...grpc.CallOption) (*SaveModelReply, error)
	GetSavedStudies(ctx context.Context, in *GetSavedStudiesRequest, opts ...grpc.CallOption) (*GetSavedStudiesReply, error)
	GetSavedModels(ctx context.Context, in *GetSavedModelsRequest, opts ...grpc.CallOption) (*GetSavedModelsReply, error)
}

type managerClient struct {
	cc *grpc.ClientConn
}

func NewManagerClient(cc *grpc.ClientConn) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) CreateStudy(ctx context.Context, in *CreateStudyRequest, opts ...grpc.CallOption) (*CreateStudyReply, error) {
	out := new(CreateStudyReply)
	err := grpc.Invoke(ctx, "/api.Manager/CreateStudy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) StopStudy(ctx context.Context, in *StopStudyRequest, opts ...grpc.CallOption) (*StopStudyReply, error) {
	out := new(StopStudyReply)
	err := grpc.Invoke(ctx, "/api.Manager/StopStudy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetStudy(ctx context.Context, in *GetStudyRequest, opts ...grpc.CallOption) (*GetStudyReply, error) {
	out := new(GetStudyReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetStudy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetStudyList(ctx context.Context, in *GetStudyListRequest, opts ...grpc.CallOption) (*GetStudyListReply, error) {
	out := new(GetStudyListReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetStudyList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) CreateTrial(ctx context.Context, in *CreateTrialRequest, opts ...grpc.CallOption) (*CreateTrialReply, error) {
	out := new(CreateTrialReply)
	err := grpc.Invoke(ctx, "/api.Manager/CreateTrial", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetTrials(ctx context.Context, in *GetTrialsRequest, opts ...grpc.CallOption) (*GetTrialsReply, error) {
	out := new(GetTrialsReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetTrials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) RunTrial(ctx context.Context, in *RunTrialRequest, opts ...grpc.CallOption) (*RunTrialReply, error) {
	out := new(RunTrialReply)
	err := grpc.Invoke(ctx, "/api.Manager/RunTrial", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) StopWorkers(ctx context.Context, in *StopWorkersRequest, opts ...grpc.CallOption) (*StopWorkersReply, error) {
	out := new(StopWorkersReply)
	err := grpc.Invoke(ctx, "/api.Manager/StopWorkers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetWorkers(ctx context.Context, in *GetWorkersRequest, opts ...grpc.CallOption) (*GetWorkersReply, error) {
	out := new(GetWorkersReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetWorkers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error) {
	out := new(GetSuggestionsReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetSuggestions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetShouldStopWorkers(ctx context.Context, in *GetShouldStopWorkersRequest, opts ...grpc.CallOption) (*GetShouldStopWorkersReply, error) {
	out := new(GetShouldStopWorkersReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetShouldStopWorkers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsReply, error) {
	out := new(GetMetricsReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetMetrics", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) SetSuggestionParameters(ctx context.Context, in *SetSuggestionParametersRequest, opts ...grpc.CallOption) (*SetSuggestionParametersReply, error) {
	out := new(SetSuggestionParametersReply)
	err := grpc.Invoke(ctx, "/api.Manager/SetSuggestionParameters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetSuggestionParameters(ctx context.Context, in *GetSuggestionParametersRequest, opts ...grpc.CallOption) (*GetSuggestionParametersReply, error) {
	out := new(GetSuggestionParametersReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetSuggestionParameters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetSuggestionParameterList(ctx context.Context, in *GetSuggestionParameterListRequest, opts ...grpc.CallOption) (*GetSuggestionParameterListReply, error) {
	out := new(GetSuggestionParameterListReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetSuggestionParameterList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) SetEarlyStoppingParameters(ctx context.Context, in *SetEarlyStoppingParametersRequest, opts ...grpc.CallOption) (*SetEarlyStoppingParametersReply, error) {
	out := new(SetEarlyStoppingParametersReply)
	err := grpc.Invoke(ctx, "/api.Manager/SetEarlyStoppingParameters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetEarlyStoppingParameters(ctx context.Context, in *GetEarlyStoppingParametersRequest, opts ...grpc.CallOption) (*GetEarlyStoppingParametersReply, error) {
	out := new(GetEarlyStoppingParametersReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetEarlyStoppingParameters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetEarlyStoppingParameterList(ctx context.Context, in *GetEarlyStoppingParameterListRequest, opts ...grpc.CallOption) (*GetEarlyStoppingParameterListReply, error) {
	out := new(GetEarlyStoppingParameterListReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetEarlyStoppingParameterList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) SaveStudy(ctx context.Context, in *SaveStudyRequest, opts ...grpc.CallOption) (*SaveStudyReply, error) {
	out := new(SaveStudyReply)
	err := grpc.Invoke(ctx, "/api.Manager/SaveStudy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) SaveModel(ctx context.Context, in *SaveModelRequest, opts ...grpc.CallOption) (*SaveModelReply, error) {
	out := new(SaveModelReply)
	err := grpc.Invoke(ctx, "/api.Manager/SaveModel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetSavedStudies(ctx context.Context, in *GetSavedStudiesRequest, opts ...grpc.CallOption) (*GetSavedStudiesReply, error) {
	out := new(GetSavedStudiesReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetSavedStudies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetSavedModels(ctx context.Context, in *GetSavedModelsRequest, opts ...grpc.CallOption) (*GetSavedModelsReply, error) {
	out := new(GetSavedModelsReply)
	err := grpc.Invoke(ctx, "/api.Manager/GetSavedModels", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Manager service

type ManagerServer interface {
	CreateStudy(context.Context, *CreateStudyRequest) (*CreateStudyReply, error)
	StopStudy(context.Context, *StopStudyRequest) (*StopStudyReply, error)
	GetStudy(context.Context, *GetStudyRequest) (*GetStudyReply, error)
	GetStudyList(context.Context, *GetStudyListRequest) (*GetStudyListReply, error)
	CreateTrial(context.Context, *CreateTrialRequest) (*CreateTrialReply, error)
	GetTrials(context.Context, *GetTrialsRequest) (*GetTrialsReply, error)
	RunTrial(context.Context, *RunTrialRequest) (*RunTrialReply, error)
	StopWorkers(context.Context, *StopWorkersRequest) (*StopWorkersReply, error)
	GetWorkers(context.Context, *GetWorkersRequest) (*GetWorkersReply, error)
	GetSuggestions(context.Context, *GetSuggestionsRequest) (*GetSuggestionsReply, error)
	GetShouldStopWorkers(context.Context, *GetShouldStopWorkersRequest) (*GetShouldStopWorkersReply, error)
	GetMetrics(context.Context, *GetMetricsRequest) (*GetMetricsReply, error)
	SetSuggestionParameters(context.Context, *SetSuggestionParametersRequest) (*SetSuggestionParametersReply, error)
	GetSuggestionParameters(context.Context, *GetSuggestionParametersRequest) (*GetSuggestionParametersReply, error)
	GetSuggestionParameterList(context.Context, *GetSuggestionParameterListRequest) (*GetSuggestionParameterListReply, error)
	SetEarlyStoppingParameters(context.Context, *SetEarlyStoppingParametersRequest) (*SetEarlyStoppingParametersReply, error)
	GetEarlyStoppingParameters(context.Context, *GetEarlyStoppingParametersRequest) (*GetEarlyStoppingParametersReply, error)
	GetEarlyStoppingParameterList(context.Context, *GetEarlyStoppingParameterListRequest) (*GetEarlyStoppingParameterListReply, error)
	SaveStudy(context.Context, *SaveStudyRequest) (*SaveStudyReply, error)
	SaveModel(context.Context, *SaveModelRequest) (*SaveModelReply, error)
	GetSavedStudies(context.Context, *GetSavedStudiesRequest) (*GetSavedStudiesReply, error)
	GetSavedModels(context.Context, *GetSavedModelsRequest) (*GetSavedModelsReply, error)
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_CreateStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStudyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).CreateStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/CreateStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).CreateStudy(ctx, req.(*CreateStudyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_StopStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopStudyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).StopStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/StopStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).StopStudy(ctx, req.(*StopStudyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetStudy(ctx, req.(*GetStudyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetStudyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudyListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetStudyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetStudyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetStudyList(ctx, req.(*GetStudyListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_CreateTrial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTrialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).CreateTrial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/CreateTrial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).CreateTrial(ctx, req.(*CreateTrialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetTrials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetTrials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetTrials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetTrials(ctx, req.(*GetTrialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_RunTrial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunTrialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).RunTrial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/RunTrial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).RunTrial(ctx, req.(*RunTrialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_StopWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).StopWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/StopWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).StopWorkers(ctx, req.(*StopWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetWorkers(ctx, req.(*GetWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSuggestions(ctx, req.(*GetSuggestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetShouldStopWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShouldStopWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetShouldStopWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetShouldStopWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetShouldStopWorkers(ctx, req.(*GetShouldStopWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetMetrics(ctx, req.(*GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_SetSuggestionParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSuggestionParametersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SetSuggestionParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/SetSuggestionParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SetSuggestionParameters(ctx, req.(*SetSuggestionParametersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetSuggestionParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionParametersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSuggestionParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetSuggestionParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSuggestionParameters(ctx, req.(*GetSuggestionParametersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetSuggestionParameterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionParameterListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSuggestionParameterList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetSuggestionParameterList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSuggestionParameterList(ctx, req.(*GetSuggestionParameterListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_SetEarlyStoppingParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEarlyStoppingParametersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SetEarlyStoppingParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/SetEarlyStoppingParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SetEarlyStoppingParameters(ctx, req.(*SetEarlyStoppingParametersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetEarlyStoppingParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEarlyStoppingParametersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetEarlyStoppingParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetEarlyStoppingParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetEarlyStoppingParameters(ctx, req.(*GetEarlyStoppingParametersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetEarlyStoppingParameterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEarlyStoppingParameterListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetEarlyStoppingParameterList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetEarlyStoppingParameterList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetEarlyStoppingParameterList(ctx, req.(*GetEarlyStoppingParameterListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_SaveStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveStudyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SaveStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/SaveStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SaveStudy(ctx, req.(*SaveStudyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_SaveModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SaveModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/SaveModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SaveModel(ctx, req.(*SaveModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetSavedStudies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSavedStudiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSavedStudies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetSavedStudies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSavedStudies(ctx, req.(*GetSavedStudiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetSavedModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSavedModelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSavedModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/GetSavedModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSavedModels(ctx, req.(*GetSavedModelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStudy",
			Handler:    _Manager_CreateStudy_Handler,
		},
		{
			MethodName: "StopStudy",
			Handler:    _Manager_StopStudy_Handler,
		},
		{
			MethodName: "GetStudy",
			Handler:    _Manager_GetStudy_Handler,
		},
		{
			MethodName: "GetStudyList",
			Handler:    _Manager_GetStudyList_Handler,
		},
		{
			MethodName: "CreateTrial",
			Handler:    _Manager_CreateTrial_Handler,
		},
		{
			MethodName: "GetTrials",
			Handler:    _Manager_GetTrials_Handler,
		},
		{
			MethodName: "RunTrial",
			Handler:    _Manager_RunTrial_Handler,
		},
		{
			MethodName: "StopWorkers",
			Handler:    _Manager_StopWorkers_Handler,
		},
		{
			MethodName: "GetWorkers",
			Handler:    _Manager_GetWorkers_Handler,
		},
		{
			MethodName: "GetSuggestions",
			Handler:    _Manager_GetSuggestions_Handler,
		},
		{
			MethodName: "GetShouldStopWorkers",
			Handler:    _Manager_GetShouldStopWorkers_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _Manager_GetMetrics_Handler,
		},
		{
			MethodName: "SetSuggestionParameters",
			Handler:    _Manager_SetSuggestionParameters_Handler,
		},
		{
			MethodName: "GetSuggestionParameters",
			Handler:    _Manager_GetSuggestionParameters_Handler,
		},
		{
			MethodName: "GetSuggestionParameterList",
			Handler:    _Manager_GetSuggestionParameterList_Handler,
		},
		{
			MethodName: "SetEarlyStoppingParameters",
			Handler:    _Manager_SetEarlyStoppingParameters_Handler,
		},
		{
			MethodName: "GetEarlyStoppingParameters",
			Handler:    _Manager_GetEarlyStoppingParameters_Handler,
		},
		{
			MethodName: "GetEarlyStoppingParameterList",
			Handler:    _Manager_GetEarlyStoppingParameterList_Handler,
		},
		{
			MethodName: "SaveStudy",
			Handler:    _Manager_SaveStudy_Handler,
		},
		{
			MethodName: "SaveModel",
			Handler:    _Manager_SaveModel_Handler,
		},
		{
			MethodName: "GetSavedStudies",
			Handler:    _Manager_GetSavedStudies_Handler,
		},
		{
			MethodName: "GetSavedModels",
			Handler:    _Manager_GetSavedModels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// Client API for Suggestion service

type SuggestionClient interface {
	GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error)
}

type suggestionClient struct {
	cc *grpc.ClientConn
}

func NewSuggestionClient(cc *grpc.ClientConn) SuggestionClient {
	return &suggestionClient{cc}
}

func (c *suggestionClient) GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error) {
	out := new(GetSuggestionsReply)
	err := grpc.Invoke(ctx, "/api.Suggestion/GetSuggestions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Suggestion service

type SuggestionServer interface {
	GetSuggestions(context.Context, *GetSuggestionsRequest) (*GetSuggestionsReply, error)
}

func RegisterSuggestionServer(s *grpc.Server, srv SuggestionServer) {
	s.RegisterService(&_Suggestion_serviceDesc, srv)
}

func _Suggestion_GetSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuggestionServer).GetSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Suggestion/GetSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuggestionServer).GetSuggestions(ctx, req.(*GetSuggestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Suggestion_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Suggestion",
	HandlerType: (*SuggestionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSuggestions",
			Handler:    _Suggestion_GetSuggestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// Client API for EarlyStopping service

type EarlyStoppingClient interface {
	GetShouldStopWorkers(ctx context.Context, in *GetShouldStopWorkersRequest, opts ...grpc.CallOption) (*GetShouldStopWorkersReply, error)
}

type earlyStoppingClient struct {
	cc *grpc.ClientConn
}

func NewEarlyStoppingClient(cc *grpc.ClientConn) EarlyStoppingClient {
	return &earlyStoppingClient{cc}
}

func (c *earlyStoppingClient) GetShouldStopWorkers(ctx context.Context, in *GetShouldStopWorkersRequest, opts ...grpc.CallOption) (*GetShouldStopWorkersReply, error) {
	out := new(GetShouldStopWorkersReply)
	err := grpc.Invoke(ctx, "/api.EarlyStopping/GetShouldStopWorkers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EarlyStopping service

type EarlyStoppingServer interface {
	GetShouldStopWorkers(context.Context, *GetShouldStopWorkersRequest) (*GetShouldStopWorkersReply, error)
}

func RegisterEarlyStoppingServer(s *grpc.Server, srv EarlyStoppingServer) {
	s.RegisterService(&_EarlyStopping_serviceDesc, srv)
}

func _EarlyStopping_GetShouldStopWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShouldStopWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EarlyStoppingServer).GetShouldStopWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.EarlyStopping/GetShouldStopWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EarlyStoppingServer).GetShouldStopWorkers(ctx, req.(*GetShouldStopWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EarlyStopping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.EarlyStopping",
	HandlerType: (*EarlyStoppingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShouldStopWorkers",
			Handler:    _EarlyStopping_GetShouldStopWorkers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcd, 0x6f, 0x1b, 0xc7,
	0xd9, 0xcf, 0x8a, 0x92, 0x48, 0x3e, 0x24, 0x25, 0x7a, 0x2c, 0xc9, 0x2b, 0x4a, 0x96, 0xa5, 0xb1,
	0xe3, 0xaf, 0x38, 0x52, 0x4c, 0x27, 0x8e, 0xad, 0x7c, 0xbc, 0x90, 0x25, 0xbe, 0x2a, 0x11, 0x89,
	0x12, 0x96, 0x72, 0xdc, 0x26, 0x40, 0x88, 0x15, 0x39, 0xa2, 0xb7, 0x26, 0xb9, 0x9b, 0xdd, 0xa5,
	0x62, 0x25, 0x08, 0x0a, 0xf4, 0xd2, 0x5e, 0x0a, 0xa4, 0xed, 0xa9, 0x3d, 0xf4, 0xd0, 0x43, 0x4f,
	0x3d, 0x15, 0xe8, 0xa1, 0x97, 0xde, 0x7b, 0xe8, 0xa9, 0x28, 0xd0, 0x53, 0x0f, 0x45, 0x8f, 0xfd,
	0x23, 0x8a, 0xf9, 0xd8, 0xdd, 0xd9, 0xe5, 0xee, 0x8a, 0xb6, 0xd3, 0xa2, 0xb7, 0x9d, 0x99, 0x67,
	0x9e, 0xdf, 0xf3, 0x3d, 0x33, 0x0f, 0x09, 0x79, 0xdd, 0x32, 0xd6, 0x2d, 0xdb, 0x74, 0x4d, 0x94,
	0xd1, 0x2d, 0xa3, 0xb2, 0xdc, 0x35, 0xcd, 0x6e, 0x8f, 0x6c, 0xe8, 0x96, 0xb1, 0xa1, 0x0f, 0x06,
	0xa6, 0xab, 0xbb, 0x86, 0x39, 0x70, 0x38, 0x09, 0xfe, 0x14, 0x4a, 0xff, 0x4f, 0x74, 0xc7, 0x38,
	0xee, 0x91, 0xa6, 0xa5, 0xb7, 0x09, 0x2a, 0x43, 0xa6, 0xaf, 0x3f, 0x57, 0x95, 0x55, 0xe5, 0x66,
	0x5e, 0xa3, 0x9f, 0x6c, 0xc6, 0x18, 0xa8, 0x13, 0x62, 0xc6, 0x18, 0x20, 0x04, 0x93, 0x3d, 0xc3,
	0x71, 0xd5, 0xcc, 0x6a, 0xe6, 0x66, 0x5e, 0x63, 0xdf, 0x74, 0xce, 0x71, 0x89, 0xa5, 0x4e, 0x32,
	0x32, 0xf6, 0x8d, 0xbf, 0x51, 0x60, 0xf6, 0x50, 0xb7, 0xf5, 0x3e, 0x71, 0x89, 0xbd, 0x6d, 0x0e,
	0x4e, 0x8c, 0x2e, 0xa5, 0x1b, 0xe8, 0x7d, 0x22, 0x00, 0xd8, 0x37, 0x7a, 0x08, 0x33, 0x96, 0x47,
	0xd6, 0x72, 0xcf, 0x2c, 0xc2, 0xc0, 0x66, 0xaa, 0x68, 0x9d, 0xea, 0xe2, 0x73, 0x38, 0x3a, 0xb3,
	0x88, 0x56, 0xb2, 0xe4, 0x21, 0x5a, 0x87, 0xdc, 0x89, 0x90, 0x5f, 0xcd, 0xac, 0x2a, 0x37, 0x0b,
	0x62, 0x53, 0x48, 0x29, 0xcd, 0xa7, 0xc1, 0x16, 0xe4, 0x7d, 0x7e, 0xdf, 0xb6, 0x2c, 0x73, 0x30,
	0x75, 0xaa, 0xf7, 0x86, 0x5c, 0x90, 0xbc, 0xc6, 0x07, 0xf8, 0xa7, 0x0a, 0x94, 0xf6, 0x89, 0x6b,
	0x1b, 0x6d, 0x67, 0xcf, 0xec, 0x36, 0x89, 0x8b, 0x96, 0x20, 0xff, 0x85, 0x69, 0x3f, 0x23, 0x76,
	0xcb, 0xe8, 0x08, 0xec, 0x1c, 0x9f, 0xa8, 0x77, 0x50, 0x15, 0x8a, 0x7d, 0x4e, 0xdd, 0xea, 0x99,
	0x5d, 0x47, 0x9d, 0x58, 0xcd, 0xdc, 0x2c, 0x54, 0x67, 0x19, 0x7a, 0xc0, 0x46, 0x2b, 0xf4, 0xfd,
	0x6f, 0x07, 0x6d, 0x40, 0x49, 0x30, 0x74, 0x5c, 0xdd, 0x1d, 0x3a, 0x4c, 0x80, 0x99, 0x2a, 0xb0,
	0x4d, 0x4d, 0x57, 0x77, 0x89, 0x56, 0xe4, 0x04, 0x4d, 0xb6, 0x8e, 0xef, 0x41, 0x56, 0xf0, 0x8a,
	0xb5, 0x81, 0xaf, 0xc8, 0x84, 0xac, 0xc8, 0x03, 0x80, 0x40, 0x80, 0xd8, 0x7d, 0x0b, 0x30, 0xcd,
	0x48, 0xb9, 0xd4, 0x79, 0x4d, 0x8c, 0xf0, 0xff, 0xc1, 0xc5, 0xe6, 0xb0, 0xdb, 0x25, 0x0e, 0x8d,
	0xbc, 0x74, 0xf3, 0xc7, 0x43, 0x3f, 0x82, 0x85, 0x9a, 0x6e, 0xf7, 0xce, 0x9a, 0xae, 0x69, 0x59,
	0xc6, 0xa0, 0xfb, 0x32, 0x3c, 0x36, 0x20, 0x73, 0xa4, 0x77, 0x5f, 0x60, 0xc3, 0x5d, 0xc8, 0xef,
	0x9b, 0xc3, 0x81, 0x4b, 0x03, 0x97, 0x26, 0x81, 0x75, 0xda, 0xf6, 0xd2, 0xc2, 0x3a, 0x6d, 0x53,
	0x46, 0x96, 0xee, 0x3e, 0x15, 0x7b, 0xd8, 0x37, 0x7e, 0x0a, 0x70, 0x64, 0xf6, 0x88, 0xcd, 0x52,
	0x8c, 0x9a, 0x83, 0x9c, 0x9c, 0x90, 0xb6, 0x2b, 0xb6, 0x89, 0x11, 0xe5, 0xf5, 0x8c, 0x9c, 0x79,
	0x09, 0xf5, 0x8c, 0x9c, 0xa1, 0x0a, 0xe4, 0x4c, 0x8b, 0x6e, 0x33, 0x6d, 0x11, 0x3c, 0xfe, 0x38,
	0x10, 0x6e, 0x52, 0x16, 0xee, 0x19, 0x94, 0x9a, 0xee, 0xb0, 0x73, 0x76, 0x70, 0x4a, 0xec, 0x53,
	0x83, 0x7c, 0x91, 0xa4, 0x97, 0xf9, 0xc5, 0x80, 0xd8, 0x9e, 0x5e, 0x6c, 0x80, 0x66, 0x60, 0xc2,
	0xe8, 0x08, 0x98, 0x09, 0xa3, 0x83, 0x56, 0xa1, 0xd0, 0x21, 0x4e, 0xdb, 0x36, 0x2c, 0x2a, 0xb5,
	0x80, 0x91, 0xa7, 0xf0, 0x1f, 0x14, 0x98, 0x3a, 0xb2, 0x0d, 0xbd, 0x87, 0x16, 0x21, 0xe7, 0xd2,
	0x8f, 0x20, 0x72, 0xb3, 0x6c, 0x5c, 0xef, 0xd0, 0x25, 0x87, 0x4a, 0x44, 0x97, 0x38, 0x5e, 0x96,
	0x8d, 0xeb, 0x1d, 0x74, 0x0f, 0x82, 0x4c, 0x69, 0x39, 0x84, 0x17, 0x8e, 0x42, 0x75, 0x26, 0x9c,
	0x52, 0x5a, 0xd1, 0x27, 0xa2, 0x59, 0x72, 0x03, 0x66, 0xcd, 0xe3, 0xef, 0x93, 0xb6, 0x6b, 0x9c,
	0x92, 0x96, 0x6c, 0x81, 0x19, 0x7f, 0xfa, 0x63, 0x3a, 0x8b, 0x96, 0x61, 0xd2, 0xd5, 0xbb, 0x8e,
	0x3a, 0xc5, 0x98, 0xe6, 0x18, 0xd3, 0x23, 0xbd, 0xab, 0xb1, 0x59, 0xfc, 0xdb, 0x29, 0x28, 0x3e,
	0x61, 0xb1, 0x2f, 0x0a, 0xd0, 0x1c, 0x4c, 0x19, 0x7d, 0xbd, 0xeb, 0x59, 0x8a, 0x0f, 0x90, 0x0a,
	0xd9, 0xb6, 0xd9, 0xef, 0xeb, 0x83, 0x8e, 0x88, 0x5d, 0x6f, 0x48, 0xbd, 0xd5, 0xb5, 0x86, 0xcc,
	0x5e, 0x53, 0x1a, 0xfd, 0xa4, 0x33, 0x6d, 0x6b, 0xc8, 0xa4, 0x99, 0xd2, 0xe8, 0x27, 0xf5, 0x74,
	0x9f, 0xf4, 0x4d, 0xfb, 0x4c, 0x9d, 0xe2, 0x9e, 0xe6, 0x23, 0xb4, 0x0c, 0x79, 0xa7, 0xfd, 0x94,
	0x74, 0x86, 0x3d, 0x62, 0xab, 0xd3, 0x6c, 0x29, 0x98, 0x40, 0xd7, 0x60, 0xaa, 0x4f, 0x03, 0x4c,
	0xcd, 0xb2, 0xc2, 0xc5, 0xcd, 0xe1, 0x87, 0x9c, 0xc6, 0x17, 0xd1, 0x15, 0x28, 0x58, 0xc3, 0x5e,
	0xaf, 0xe5, 0x90, 0xb6, 0x4d, 0x5c, 0x35, 0xc7, 0xb8, 0x00, 0x9d, 0x6a, 0xb2, 0x19, 0xb4, 0x03,
	0x05, 0xa9, 0xae, 0xab, 0x79, 0x66, 0x06, 0xcc, 0x98, 0xc9, 0x8a, 0xaf, 0x6f, 0x05, 0x44, 0xb5,
	0x81, 0x6b, 0x9f, 0x69, 0xf2, 0x36, 0x74, 0x17, 0x0a, 0xae, 0x1f, 0xba, 0x8e, 0x0a, 0x52, 0xd9,
	0x09, 0x42, 0x5a, 0x93, 0x69, 0xd0, 0x3b, 0x30, 0xdd, 0xd3, 0x8f, 0x49, 0xcf, 0x51, 0x0b, 0x8c,
	0xfa, 0xf2, 0x28, 0xe6, 0x1e, 0x5b, 0xe7, 0x70, 0x82, 0x18, 0xdd, 0x82, 0x72, 0xdb, 0x1c, 0xb8,
	0xba, 0x31, 0xa0, 0xd1, 0x30, 0x3c, 0x39, 0x31, 0x9e, 0xab, 0x45, 0xa6, 0xd5, 0xac, 0x3f, 0xdf,
	0x64, 0xd3, 0xe8, 0x21, 0xe4, 0xc8, 0xe0, 0xb4, 0x75, 0xaa, 0xdb, 0x8e, 0x5a, 0x62, 0x18, 0x2b,
	0xa3, 0x18, 0xb5, 0xc1, 0xe9, 0xc7, 0xba, 0x2d, 0x40, 0xb2, 0x84, 0x8f, 0x2a, 0x1f, 0x42, 0x39,
	0xaa, 0xb0, 0x97, 0x78, 0x4a, 0x90, 0x78, 0xb1, 0x99, 0xbf, 0x39, 0xf1, 0x40, 0xa9, 0x3c, 0x84,
	0x82, 0x24, 0xfc, 0x0b, 0x6d, 0xdd, 0x84, 0xa2, 0x2c, 0xd3, 0x8b, 0xec, 0xc5, 0xff, 0x50, 0x60,
	0x9a, 0x6b, 0x97, 0x7e, 0x4c, 0xa4, 0x64, 0x9b, 0x9c, 0xa3, 0x99, 0x70, 0x8e, 0xaa, 0x90, 0xb5,
	0x87, 0x03, 0xd7, 0xe8, 0x7b, 0xb9, 0xe4, 0x0d, 0x11, 0x86, 0x69, 0x71, 0x76, 0x4c, 0x8d, 0x9c,
	0x1d, 0x62, 0x05, 0xdd, 0x82, 0xe9, 0x36, 0x33, 0x39, 0x0b, 0xe5, 0x42, 0xf5, 0xc2, 0x88, 0x2f,
	0x34, 0x41, 0xe0, 0xe7, 0x64, 0x36, 0x36, 0x27, 0xff, 0x9a, 0x81, 0x02, 0xab, 0x5e, 0x29, 0x77,
	0x82, 0xf8, 0xda, 0xf5, 0x08, 0x2e, 0x98, 0x96, 0x6b, 0xf4, 0x8d, 0x2f, 0x99, 0x5f, 0xf9, 0x01,
	0xcd, 0x4f, 0xbb, 0x79, 0x06, 0x72, 0x20, 0xad, 0xb2, 0x33, 0xba, 0x6c, 0x46, 0x66, 0xd0, 0x1b,
	0x11, 0x1e, 0x5d, 0x53, 0xef, 0x31, 0x73, 0x28, 0x61, 0xe2, 0x5d, 0x53, 0xef, 0xa1, 0x06, 0x5c,
	0x08, 0x4a, 0x17, 0x57, 0x8e, 0x9b, 0xa8, 0x50, 0x5d, 0x13, 0x26, 0xf2, 0xf5, 0x58, 0x8f, 0xdc,
	0x75, 0x1c, 0xad, 0x6c, 0x45, 0x66, 0xd0, 0x9b, 0x80, 0xf4, 0x76, 0x9b, 0x38, 0x4e, 0xcb, 0x22,
	0x76, 0xdf, 0x70, 0x1c, 0x96, 0x6d, 0xd3, 0xac, 0xe4, 0x5c, 0xe0, 0x2b, 0x87, 0xc1, 0x42, 0xba,
	0x1d, 0xd1, 0x5b, 0x30, 0x17, 0x29, 0x91, 0x2d, 0x66, 0x47, 0x5e, 0x23, 0x50, 0xb8, 0x4e, 0x36,
	0xa8, 0x55, 0x55, 0xc8, 0x8a, 0x8b, 0x03, 0xab, 0x13, 0x79, 0xcd, 0x1b, 0x56, 0x1e, 0x41, 0x39,
	0x2a, 0x3e, 0x5a, 0xa7, 0x45, 0x91, 0xab, 0xac, 0x30, 0x01, 0xe6, 0xc2, 0x15, 0x5b, 0x38, 0xdd,
	0x23, 0xc2, 0x75, 0x40, 0xdb, 0x36, 0xd1, 0x5d, 0xc2, 0x8c, 0xa2, 0x91, 0xcf, 0x87, 0xc4, 0x71,
	0xd1, 0x3d, 0x28, 0xf2, 0x50, 0x15, 0xc1, 0xa3, 0x30, 0xeb, 0x95, 0xa3, 0xd6, 0xd3, 0x0a, 0x4e,
	0x30, 0xc0, 0x6f, 0x42, 0x39, 0xc4, 0xca, 0xea, 0x9d, 0x85, 0x62, 0x5e, 0x09, 0xc5, 0x3c, 0x25,
	0xa7, 0x77, 0x83, 0x10, 0x6e, 0x0a, 0x79, 0x19, 0x66, 0x24, 0x72, 0xab, 0x77, 0x86, 0xef, 0xc0,
	0xec, 0x2e, 0x71, 0xc7, 0xdd, 0xbf, 0x03, 0xa5, 0x80, 0x9a, 0x8a, 0xf6, 0x52, 0x3a, 0xce, 0xc3,
	0x45, 0x8f, 0xcb, 0x9e, 0xe1, 0xb8, 0x02, 0x17, 0x1f, 0xc2, 0x85, 0xf0, 0x34, 0x05, 0x78, 0x0f,
	0x66, 0x39, 0x80, 0x29, 0x0e, 0x7c, 0xcf, 0x25, 0x28, 0xc0, 0xf0, 0xee, 0x02, 0xda, 0x8c, 0x23,
	0x0f, 0x1d, 0x7c, 0xdf, 0xf3, 0x0b, 0x3b, 0xc4, 0x3d, 0xfd, 0x56, 0x61, 0x8a, 0xd5, 0x05, 0x21,
	0x2c, 0xcf, 0x78, 0x4e, 0xc1, 0x17, 0x02, 0x27, 0x88, 0x7d, 0xc2, 0x09, 0x09, 0x37, 0x00, 0x4a,
	0xbe, 0x4b, 0x5c, 0x46, 0xeb, 0x8c, 0x61, 0xc4, 0xb7, 0x61, 0x46, 0x22, 0xa7, 0xbc, 0x31, 0x4c,
	0x33, 0x5e, 0x9e, 0x6e, 0xb2, 0x48, 0x62, 0x05, 0xff, 0x42, 0x81, 0x59, 0x6d, 0x38, 0x08, 0x69,
	0x92, 0x0c, 0x12, 0x12, 0x77, 0x22, 0xb1, 0x18, 0x66, 0xc2, 0xc5, 0xf0, 0xbe, 0x7f, 0x9f, 0x16,
	0xee, 0x9c, 0x4c, 0xaa, 0x77, 0xe2, 0x5a, 0x2d, 0x1c, 0x7a, 0x07, 0x4a, 0x81, 0x68, 0x54, 0xa1,
	0xb4, 0x12, 0x8e, 0x4d, 0x40, 0x34, 0x08, 0x39, 0xbf, 0x31, 0x0c, 0x86, 0x2e, 0x03, 0xf8, 0xdc,
	0xbc, 0x2b, 0x76, 0xde, 0x63, 0xe7, 0xd0, 0x8b, 0x82, 0xe1, 0xb4, 0xda, 0x66, 0xdf, 0xea, 0x11,
	0x97, 0xeb, 0x94, 0xd3, 0xc0, 0x70, 0xb6, 0xc5, 0x0c, 0x46, 0x3c, 0x49, 0x7c, 0x40, 0x1a, 0xf7,
	0x27, 0x2c, 0xd8, 0xc6, 0x97, 0x21, 0xc5, 0x9e, 0x21, 0x65, 0x33, 0x11, 0x65, 0x1f, 0xb0, 0xfc,
	0x92, 0xa1, 0xd1, 0xeb, 0x90, 0xe5, 0xcb, 0x9e, 0xbb, 0x0b, 0x92, 0x7d, 0x35, 0x6f, 0x0d, 0xff,
	0x59, 0x81, 0x79, 0x9a, 0x0f, 0xfe, 0x03, 0x62, 0x1c, 0x31, 0xef, 0xc2, 0x9c, 0xe3, 0x6f, 0x68,
	0xe9, 0xbd, 0xae, 0x69, 0x1b, 0xee, 0xd3, 0xbe, 0x10, 0xf9, 0x62, 0xb0, 0xb6, 0xe5, 0x2d, 0xa1,
	0xd7, 0x61, 0xc6, 0xe6, 0x8c, 0x5b, 0x83, 0x61, 0xff, 0x98, 0xd8, 0xe2, 0xca, 0x57, 0x12, 0xb3,
	0x0d, 0x36, 0x89, 0xae, 0xc1, 0x4c, 0xcf, 0xec, 0xb6, 0x24, 0x47, 0x4c, 0x32, 0x47, 0x14, 0x7b,
	0x66, 0xf7, 0x89, 0xef, 0x8b, 0x45, 0xc8, 0xb1, 0xd2, 0x4f, 0x45, 0xe3, 0x57, 0xc2, 0x2c, 0x1b,
	0xd7, 0x3b, 0xf8, 0x21, 0xcf, 0x7a, 0x59, 0x9d, 0x71, 0x63, 0xff, 0x27, 0x0a, 0x2c, 0xd1, 0xbd,
	0x4f, 0xcd, 0x61, 0xaf, 0xf3, 0x62, 0xb1, 0xf3, 0x00, 0x54, 0x42, 0x5f, 0x50, 0x2d, 0x47, 0x3c,
	0xa1, 0x46, 0x8c, 0xb2, 0x40, 0xe4, 0x17, 0x56, 0x60, 0x97, 0x14, 0x55, 0x0e, 0x61, 0x31, 0x5e,
	0x1c, 0x5e, 0x12, 0x17, 0x1c, 0xb6, 0xc2, 0x20, 0x65, 0x83, 0x29, 0xcc, 0x60, 0x17, 0x9d, 0xc8,
	0xbe, 0x7a, 0xc7, 0xc1, 0x36, 0x0b, 0x47, 0xf1, 0xcc, 0x7c, 0xf5, 0x94, 0xb8, 0x0a, 0x25, 0xef,
	0x31, 0x4d, 0x0f, 0x46, 0x47, 0x74, 0x2c, 0xbc, 0x17, 0x36, 0x3d, 0x12, 0x1d, 0x7c, 0xc0, 0x42,
	0xd3, 0xc7, 0xa4, 0xb2, 0xbf, 0x0f, 0x65, 0xe9, 0x11, 0x4e, 0x9f, 0x2c, 0xe1, 0x72, 0x1b, 0x7a,
	0xcf, 0x6b, 0x33, 0x7d, 0x79, 0xe8, 0xe0, 0x3f, 0x2a, 0xf4, 0xe5, 0xd8, 0x21, 0xbd, 0xfa, 0xe0,
	0xc4, 0xa4, 0x22, 0x72, 0xe9, 0xa5, 0x2b, 0x4e, 0x9e, 0xcd, 0xb0, 0x13, 0x39, 0x94, 0x35, 0x13,
	0x91, 0x5b, 0xde, 0x3a, 0x80, 0x7f, 0x83, 0x70, 0x12, 0x5e, 0x4d, 0x12, 0x05, 0xba, 0x1e, 0x1c,
	0xef, 0x93, 0x8c, 0xb8, 0x28, 0x8b, 0xeb, 0x1f, 0xf6, 0x54, 0xa6, 0x3e, 0x15, 0xb0, 0xc5, 0x5e,
	0xb0, 0xdc, 0xab, 0x79, 0x36, 0x73, 0x48, 0x9f, 0xb1, 0xef, 0x40, 0x61, 0x47, 0x77, 0xf5, 0x26,
	0x71, 0x99, 0x06, 0x71, 0xd7, 0xb3, 0xb8, 0xd7, 0xaf, 0x01, 0xe5, 0xa6, 0x7e, 0x1a, 0x3e, 0xfc,
	0xcf, 0xd1, 0x3e, 0xfe, 0x96, 0x17, 0x79, 0x91, 0x66, 0x46, 0x5f, 0xa4, 0xf4, 0x00, 0x0f, 0xa0,
	0x68, 0x21, 0xfb, 0xb1, 0xc2, 0xd1, 0x99, 0xe1, 0x3d, 0x74, 0xf6, 0xc2, 0xea, 0x10, 0xef, 0x88,
	0xf3, 0x5e, 0x58, 0xc2, 0x35, 0x1a, 0x5f, 0x44, 0x6f, 0x40, 0xae, 0xa3, 0xbb, 0x3a, 0x7b, 0x99,
	0x4e, 0x48, 0x07, 0xb7, 0x64, 0x03, 0x2d, 0xdb, 0xe1, 0x03, 0xb4, 0x06, 0x45, 0x97, 0x0c, 0x1c,
	0xd3, 0x6e, 0x1d, 0x9b, 0xba, 0xdd, 0x11, 0x65, 0xb6, 0xc0, 0xe7, 0x1e, 0xd1, 0x29, 0x4f, 0x38,
	0x21, 0x09, 0x15, 0x4e, 0x85, 0x05, 0x9a, 0x28, 0xfa, 0x29, 0xe9, 0x50, 0x91, 0x0d, 0xe2, 0xc5,
	0x36, 0xde, 0x81, 0xb9, 0x91, 0x15, 0x1a, 0x81, 0x77, 0x80, 0xc5, 0xb8, 0x41, 0xd2, 0xce, 0x79,
	0x8f, 0x04, 0xdf, 0xe7, 0x25, 0x92, 0x72, 0x61, 0xa8, 0xce, 0x78, 0xe6, 0xc7, 0x1f, 0xf0, 0x5a,
	0x24, 0xef, 0xa3, 0xe0, 0xd7, 0x61, 0x9a, 0x59, 0xc6, 0xc3, 0x8e, 0xda, 0x4d, 0xac, 0x62, 0x2d,
	0x10, 0x3e, 0x64, 0xf6, 0x57, 0x08, 0x79, 0xbc, 0x09, 0x28, 0xc2, 0x93, 0x4a, 0x34, 0x96, 0x23,
	0xf1, 0xdf, 0x14, 0x58, 0x69, 0xca, 0xb5, 0xd5, 0xcf, 0x92, 0xff, 0xd0, 0x99, 0x21, 0xd7, 0xc6,
	0x4c, 0xa8, 0x36, 0xa2, 0x7d, 0x98, 0x97, 0xb8, 0x49, 0x59, 0xcc, 0x13, 0x53, 0xe5, 0xee, 0x1c,
	0x95, 0x54, 0x93, 0x84, 0x08, 0xc4, 0xc7, 0x0f, 0x61, 0x39, 0x51, 0x33, 0x71, 0x2d, 0xf3, 0x25,
	0x51, 0xc2, 0x55, 0xfa, 0x3d, 0x58, 0xd9, 0x3d, 0xd7, 0x28, 0x49, 0x9b, 0xfb, 0xb0, 0xbc, 0x9b,
	0x86, 0x9b, 0xa8, 0xa6, 0xf2, 0x52, 0x6a, 0x7e, 0x08, 0x6b, 0xf1, 0x70, 0xd2, 0x05, 0x39, 0xed,
	0x4e, 0xf9, 0x7b, 0x05, 0x16, 0x62, 0x76, 0xd3, 0xc4, 0x4d, 0x56, 0xf2, 0x65, 0x3c, 0x9f, 0xa8,
	0x77, 0xe6, 0xa5, 0xf4, 0xfe, 0x12, 0xae, 0xa4, 0xe9, 0x4d, 0x2d, 0xfd, 0x04, 0x16, 0xe3, 0x10,
	0xe5, 0xc3, 0x69, 0x29, 0x09, 0x95, 0x9e, 0x52, 0x97, 0x9c, 0xd8, 0x79, 0x07, 0x57, 0x61, 0x9e,
	0x3d, 0x86, 0xfc, 0xe5, 0x31, 0xec, 0x3c, 0x0f, 0x17, 0xa3, 0x7b, 0x68, 0x9d, 0xfb, 0x97, 0x02,
	0x6b, 0x4d, 0xe2, 0xc6, 0xf7, 0x6a, 0xff, 0x7b, 0xd7, 0x94, 0x48, 0x2a, 0x3e, 0x81, 0xc5, 0x08,
	0xd3, 0x91, 0x74, 0xe4, 0x96, 0x8b, 0x97, 0x5b, 0xbb, 0x44, 0xe2, 0xf5, 0xc1, 0xef, 0xc3, 0x95,
	0x34, 0x6d, 0xcf, 0xc9, 0x4b, 0x1e, 0xeb, 0xe7, 0xdb, 0x2a, 0x69, 0x3f, 0x8f, 0x99, 0x54, 0xf4,
	0x54, 0xcd, 0x95, 0x57, 0xd0, 0x7c, 0x0b, 0xae, 0x25, 0x62, 0x8f, 0x99, 0xaa, 0x7f, 0x52, 0x60,
	0x31, 0x9e, 0xc1, 0x39, 0xd9, 0xfa, 0xf2, 0x31, 0x92, 0x6a, 0x8e, 0xcc, 0x2b, 0x98, 0xe3, 0x47,
	0x0a, 0xe0, 0x73, 0xec, 0x41, 0xdd, 0xa1, 0xc3, 0xe5, 0x24, 0x7c, 0x39, 0x8d, 0x57, 0x52, 0x64,
	0xa0, 0x99, 0x5c, 0x21, 0x49, 0x4b, 0xce, 0xed, 0xc7, 0x50, 0x0a, 0xfd, 0x46, 0x85, 0xca, 0x50,
	0x7c, 0xdc, 0xf8, 0xa8, 0x71, 0xf0, 0xa4, 0xd1, 0x3a, 0xfa, 0xde, 0x61, 0xad, 0xfc, 0x1a, 0x02,
	0x98, 0xde, 0x39, 0x78, 0xfc, 0x68, 0xaf, 0x56, 0x56, 0x50, 0x16, 0x32, 0xf5, 0xc6, 0x51, 0x79,
	0x02, 0x15, 0x21, 0xb7, 0x53, 0x6f, 0x6e, 0x6b, 0xb5, 0xa3, 0x5a, 0x39, 0x83, 0x66, 0xa1, 0xb0,
	0xbd, 0x75, 0x54, 0xdb, 0x3d, 0xd0, 0xea, 0xdb, 0x5b, 0x7b, 0xe5, 0xc9, 0xdb, 0xdf, 0x81, 0x72,
	0xb4, 0xb3, 0x86, 0x54, 0x98, 0xf3, 0x38, 0x1f, 0x1c, 0x1e, 0xd5, 0xf7, 0xeb, 0x9f, 0x6c, 0x1d,
	0xd5, 0x0f, 0x1a, 0xe5, 0xd7, 0x28, 0xb3, 0xfd, 0x7a, 0x83, 0xce, 0x50, 0x0c, 0x3a, 0xda, 0xfa,
	0x2e, 0x1f, 0x4d, 0xdc, 0xde, 0x85, 0x29, 0xd6, 0x55, 0x44, 0x05, 0xc8, 0x1e, 0xd6, 0x1a, 0x3b,
	0xf5, 0xc6, 0x6e, 0xf9, 0x35, 0x3a, 0xd0, 0x1e, 0x37, 0x1a, 0x74, 0xa0, 0xa0, 0x12, 0xe4, 0xb7,
	0x0f, 0xf6, 0x0f, 0xf7, 0x6a, 0x47, 0xb5, 0x9d, 0xf2, 0x04, 0x95, 0xf7, 0xa3, 0xfa, 0xde, 0x5e,
	0x6d, 0xa7, 0x9c, 0x41, 0x79, 0x98, 0xaa, 0x69, 0xda, 0x81, 0x56, 0x7e, 0x5e, 0xfd, 0xfb, 0x1c,
	0x64, 0xf7, 0xf5, 0x81, 0xde, 0x25, 0x36, 0xea, 0x43, 0x41, 0xea, 0x16, 0xa1, 0x4b, 0xcc, 0x80,
	0xa3, 0xad, 0xa8, 0xca, 0xfc, 0xe8, 0x02, 0x2d, 0x5b, 0xeb, 0x3f, 0xfc, 0xcb, 0x3f, 0x7f, 0x3e,
	0x71, 0x13, 0xab, 0xec, 0x47, 0x52, 0xc1, 0x74, 0x43, 0x22, 0xdb, 0x0c, 0x75, 0x77, 0xd0, 0x31,
	0xe4, 0xfd, 0xf6, 0x11, 0x9a, 0x17, 0x17, 0xb3, 0x70, 0xf7, 0xa9, 0x72, 0x31, 0x3a, 0x4d, 0x81,
	0x6e, 0x31, 0xa0, 0xab, 0x68, 0x2d, 0x04, 0xe4, 0x13, 0x6d, 0x7c, 0xe5, 0x25, 0xcb, 0xd7, 0xe8,
	0x33, 0xc8, 0x79, 0x5d, 0x20, 0xc4, 0xdb, 0x6e, 0x91, 0xfe, 0x54, 0x05, 0x45, 0x66, 0x29, 0xc0,
	0x4d, 0x06, 0x80, 0xd1, 0x6a, 0x08, 0xc0, 0xa3, 0x91, 0xf9, 0xb7, 0xa1, 0x28, 0x77, 0x99, 0x90,
	0x1a, 0xe2, 0x26, 0xe5, 0x70, 0x65, 0x21, 0x66, 0x85, 0x62, 0xad, 0x31, 0xac, 0x25, 0xb4, 0x18,
	0x8b, 0xc5, 0x98, 0x9e, 0x78, 0x7e, 0xe1, 0xbf, 0x1e, 0xc9, 0x7e, 0x91, 0x1b, 0x38, 0x21, 0xbf,
	0x04, 0xed, 0x13, 0x7c, 0x83, 0x21, 0xac, 0xc5, 0xfa, 0x85, 0x91, 0x6d, 0xf2, 0x46, 0x15, 0x75,
	0x88, 0xdf, 0x4a, 0x12, 0x0e, 0x89, 0x76, 0xa2, 0x84, 0x43, 0xc2, 0x1d, 0xa7, 0x04, 0x87, 0xf8,
	0x44, 0xb2, 0xc1, 0x3e, 0x86, 0x9c, 0xd7, 0xdc, 0x11, 0x0e, 0x89, 0xb4, 0xa1, 0x84, 0x43, 0x42,
	0x1d, 0x20, 0xbc, 0xca, 0x00, 0x2a, 0x78, 0x3e, 0x04, 0xe0, 0xd1, 0x6c, 0x2a, 0xb7, 0xd1, 0x31,
	0x14, 0xa4, 0xb7, 0xb3, 0xb0, 0xd1, 0xe8, 0xe3, 0xbe, 0x32, 0x3f, 0xba, 0x40, 0x01, 0xae, 0x32,
	0x80, 0xcb, 0x11, 0x1b, 0x49, 0x64, 0x14, 0xe3, 0x53, 0x80, 0xa0, 0xfb, 0x82, 0x7c, 0x87, 0x46,
	0x10, 0xe6, 0x46, 0xe6, 0x29, 0xc0, 0x15, 0x06, 0xb0, 0x88, 0x2e, 0x45, 0x4d, 0xe4, 0xb1, 0x1b,
	0xb0, 0x3e, 0x9e, 0xd4, 0xd0, 0x40, 0x15, 0x3f, 0x62, 0x46, 0x9a, 0x36, 0x15, 0x35, 0x76, 0x8d,
	0x02, 0x5d, 0x67, 0x40, 0xab, 0x78, 0x69, 0x24, 0x9e, 0x02, 0x4a, 0xaa, 0xcc, 0x37, 0x0a, 0x7f,
	0x76, 0x44, 0xdb, 0x0e, 0x68, 0xd5, 0x67, 0x9d, 0xd0, 0x20, 0xa9, 0xac, 0xa4, 0x50, 0x50, 0x11,
	0xee, 0x33, 0x11, 0xde, 0xc2, 0x6f, 0x24, 0x84, 0x43, 0xdc, 0x4e, 0x2a, 0xd2, 0x67, 0xcc, 0xbe,
	0xde, 0x4f, 0xea, 0xbe, 0x7d, 0xc3, 0x7d, 0x8c, 0xc0, 0xbe, 0x72, 0xaf, 0x01, 0x63, 0x86, 0xb9,
	0x8c, 0x47, 0xec, 0x2b, 0xa8, 0x28, 0xff, 0x9f, 0x29, 0x70, 0x29, 0xe1, 0xfa, 0x8f, 0xae, 0xf2,
	0xb8, 0x48, 0xbd, 0xe1, 0x57, 0xd6, 0xd2, 0x89, 0xa8, 0x1c, 0x1b, 0x4c, 0x8e, 0x5b, 0xf8, 0x5a,
	0x38, 0x90, 0xe2, 0xb7, 0x50, 0xa1, 0x7e, 0xa9, 0xc0, 0xa5, 0xdd, 0x54, 0xa1, 0x76, 0xc7, 0x11,
	0x2a, 0xed, 0x79, 0x81, 0xdf, 0x65, 0x42, 0xdd, 0x45, 0x1b, 0xc9, 0x31, 0x11, 0x6c, 0xd9, 0xf8,
	0xca, 0xbb, 0x32, 0x7c, 0x8d, 0x7e, 0xa3, 0x40, 0x25, 0xf9, 0x46, 0x8d, 0xae, 0xa7, 0x40, 0xcb,
	0xb5, 0xef, 0xda, 0xb9, 0x74, 0x54, 0xca, 0x4d, 0x26, 0xe5, 0xdb, 0xa8, 0x3a, 0x86, 0x94, 0x74,
	0x97, 0x5c, 0x56, 0x7e, 0xa5, 0x40, 0x25, 0xf9, 0x12, 0x29, 0x04, 0x3d, 0xf7, 0x4e, 0x2d, 0x04,
	0x3d, 0xe7, 0x36, 0x8a, 0xab, 0x4c, 0xd0, 0x3b, 0xf8, 0x46, 0xd4, 0xc7, 0x09, 0xbb, 0xa8, 0x9b,
	0x85, 0x25, 0xd3, 0x05, 0xdc, 0x1d, 0x53, 0xc0, 0x73, 0x2e, 0xac, 0xc9, 0x96, 0x4c, 0xd8, 0x25,
	0xbb, 0xfc, 0x77, 0x0a, 0x5c, 0x4e, 0xbd, 0x84, 0xa1, 0x5b, 0xe9, 0x32, 0xc8, 0x8e, 0xbf, 0x31,
	0x0e, 0x29, 0x95, 0xf8, 0x03, 0x26, 0xf1, 0xbb, 0xe8, 0x9d, 0xf1, 0x24, 0x8e, 0xba, 0xbf, 0x05,
	0x79, 0xbf, 0x91, 0xe5, 0x5d, 0x25, 0x22, 0x3d, 0x34, 0xef, 0x2a, 0x11, 0xee, 0x77, 0xc5, 0x57,
	0xcb, 0x30, 0x11, 0x75, 0xdf, 0x27, 0x1c, 0x80, 0xf5, 0x4a, 0x24, 0x00, 0xb9, 0x5f, 0x23, 0x01,
	0x48, 0x3d, 0x2b, 0x71, 0xbc, 0xe3, 0x85, 0x11, 0x00, 0x46, 0x44, 0x79, 0x9b, 0xfc, 0x47, 0x33,
	0xa9, 0x79, 0x85, 0x96, 0xfc, 0x84, 0x19, 0x6d, 0x76, 0x55, 0x16, 0xe3, 0x17, 0x29, 0xda, 0x35,
	0x86, 0xb6, 0x82, 0x96, 0x47, 0x52, 0x48, 0xe6, 0xfe, 0x8c, 0x1f, 0x35, 0x41, 0xbf, 0x4a, 0x3a,
	0x6a, 0x46, 0x9a, 0x5f, 0xd2, 0x51, 0x13, 0x69, 0x70, 0x79, 0x87, 0x26, 0x5a, 0x8a, 0x45, 0xe3,
	0x94, 0xd5, 0x1f, 0x00, 0x04, 0xf9, 0x8b, 0x3e, 0xff, 0x96, 0x4e, 0x39, 0x71, 0xe3, 0xc0, 0x2b,
	0x0c, 0x3a, 0x58, 0x1e, 0x3d, 0xe8, 0xaa, 0xbf, 0x56, 0xa0, 0x14, 0x8a, 0xa2, 0xff, 0xc1, 0xa3,
	0xef, 0x78, 0x9a, 0xfd, 0x8f, 0xf0, 0xde, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x17, 0xfa, 0x93,
	0x0b, 0x77, 0x28, 0x00, 0x00,
}
